{"version":3,"file":"ngx-golden-layout.js","sources":["../../projects/ngx-golden-layout/src/lib/config.ts","../../projects/ngx-golden-layout/src/lib/deferred.ts","../../projects/ngx-golden-layout/src/lib/multiwindow-service.ts","../../projects/ngx-golden-layout/src/lib/plugin-url.service.ts","../../projects/ngx-golden-layout/src/lib/plugin-registry.service.ts","../../projects/ngx-golden-layout/src/lib/tokens.ts","../../projects/ngx-golden-layout/src/lib/type-guards.ts","../../projects/ngx-golden-layout/src/lib/wrapper.component.ts","../../projects/ngx-golden-layout/src/lib/component-registry.service.ts","../../projects/ngx-golden-layout/src/lib/fallback.ts","../../projects/ngx-golden-layout/src/lib/root-window.service.ts","../../projects/ngx-golden-layout/src/lib/window-sync.service.ts","../../projects/ngx-golden-layout/src/lib/golden-layout.component.ts","../../projects/ngx-golden-layout/src/lib/module.ts","../../../projects/ngx-golden-layout/src/ngx-golden-layout.ts"],"names":["config.GoldenLayoutComponents","config.GoldenLayoutPluginDependency"],"mappings":"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","sourcesContent":["import { InjectionToken, Type } from '@angular/core';\r\nimport * as GoldenLayout from 'golden-layout';\r\n\r\nexport interface ComponentType {\r\n  /**\r\n   * Optional string indicating that this component type is handled by the plugin\r\n   * specified in this field.\r\n   */\r\n  plugin?: string;\r\n  /**\r\n   * Name used to register compoent with GoldenLayout.\r\n   * Must be unique over all component types\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * Angular component type.\r\n   * Pass the class of the component to instantiate here.\r\n   */\r\n  type: Type<any>;\r\n}\r\n\r\nexport interface PluginDependencyType {\r\n  /**\r\n   * Fully qualified module name of the dependency\r\n   */\r\n  name: string;\r\n  /**\r\n   * Function that loads the dependency\r\n   * Might return an object (direct load) OR a promise (deferred loading using import() syntax)\r\n   */\r\n  loader: any;\r\n}\r\n\r\n/**\r\n * Inject an array of ComponentType into this token to\r\n * register those by default with the ComponentRegistry\r\n */\r\nexport const GoldenLayoutComponents = new InjectionToken<ComponentType[]>('ComponentTypes');\r\n\r\n/**\r\n * Inject dependency modules to be used with the PluginRegistry\r\n * This token can use multi: true\r\n */\r\nexport const GoldenLayoutPluginDependency = new InjectionToken<PluginDependencyType[]>('Dependencies');\r\n\r\nexport interface IExtendedGoldenLayoutConfig extends GoldenLayout.Config {\r\n  settings: GoldenLayout.Config['settings'] & {\r\n    /**\r\n     * Use alternate maximise method that moves *all* tabs to the single root.\r\n     */\r\n    maximiseAllItems?: boolean;\r\n  };\r\n}\r\n\r\nexport interface IExtendedGoldenLayoutContainer extends GoldenLayout.Container {\r\n  /**\r\n   * Unique id for the container\r\n   */\r\n  id: string;\r\n}\r\n","export class Deferred<T> {\r\n  public promise: Promise<T>;\r\n  public resolve: (val: T) => void;\r\n  public reject: (reason: Error | string) => void;\r\n  constructor() {\r\n    this.promise = new Promise<T>((resolve, reject) => {\r\n      this.resolve = resolve;\r\n      this.reject = reject;\r\n    });\r\n  }\r\n}\r\n","export function MultiWindowInit(): void {\r\n  if (!isChildWindow()) {\r\n    if (!(window as any).__services && !(window as any).__serviceConstructors) {\r\n      (window as any).__services = new (window as any).Map();\r\n      (window as any).__serviceConstructors = new (window as any).Map();\r\n\r\n      // Electron compatibility, when we have a global 'require' in our window, we throw it into the new window context\r\n      if ((window as any).require) {\r\n        const originalWindowOpen = window.open.bind(window);\r\n        window.open = (url?: string, target?: string, features?: string, replace?: boolean): Window => {\r\n          const newWindow = originalWindowOpen(url, target, features, replace);\r\n          newWindow.require = (window as any).require;\r\n          return newWindow;\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport type Constructor<T> = {\r\n  new (...args: any[]): T;\r\n}\r\n\r\nexport function isChildWindow(): boolean {\r\n  try {\r\n    return !!window.opener && !!window.opener.location.href;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function MultiWindowService<T>(uniqueName: string) {\r\n  MultiWindowInit();\r\n  return function (constructor: Constructor<T>): Constructor<T> {\r\n    const constr = constructor as any;\r\n    const rootWindow = (isChildWindow() ? window.opener : window) as any;\r\n    const rootWindowIsMyWindow = rootWindow === window;\r\n    if (rootWindowIsMyWindow) {\r\n      const constrGot = rootWindow.__serviceConstructors.get(uniqueName);\r\n      if (constrGot && constrGot !== constr) {\r\n        throw new Error(`MultiWindowService(): uniqueName ${uniqueName} already taken by ${constrGot}, wanted by ${constr}`);\r\n      }\r\n      rootWindow.__serviceConstructors.set(uniqueName, constr);\r\n    }\r\n    const newConstructor = (function(...args: any[]): T {\r\n      const hasInstance = rootWindow.__services.has(uniqueName);\r\n      if (!hasInstance) {\r\n        const storedConstr = rootWindow.__serviceConstructors.get(uniqueName) || constr;\r\n        rootWindow.__services.set(uniqueName, new storedConstr(...args));\r\n      }\r\n      return rootWindow.__services.get(uniqueName);\r\n    }) as any;\r\n    if (rootWindowIsMyWindow) {\r\n      // https://github.com/angular/angular/issues/36120\r\n      // ɵfac is created before this decorator runs.\r\n      // so copy over the static properties.\r\n      for (const prop in constr) {\r\n        if (constr.hasOwnProperty(prop)) {\r\n          newConstructor[prop] = constr[prop];\r\n        }\r\n      }\r\n    }\r\n    try {\r\n      if (rootWindowIsMyWindow) {\r\n        const metadata = (Reflect as any).getMetadata('design:paramtypes', constr);\r\n        (Reflect as any).metadata('design:paramtypes', metadata)(newConstructor);\r\n      }\r\n    } catch {\r\n      // obviously, we're in ivy.\r\n    }\r\n    return newConstructor as Constructor<T>;\r\n  };\r\n}\r\n","import { MultiWindowService } from './multiwindow-service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n\r\nexport interface IPluginURL {\r\n  id: string,\r\n  url: string,\r\n};\r\n\r\n/**\r\n * This class manages plugin load and unload requests across all windows.\r\n * Because we can't have progress reporting about all windows, we also don't\r\n * return any progress/success indicator here.\r\n */\r\n@MultiWindowService<PluginURLProvider>('_gl__PluginURLProvider')\r\n@Injectable()\r\nexport class PluginURLProvider {\r\n  private loadedURLs = new Map<string, string>();\r\n  private loads = new Subject<IPluginURL>();\r\n  private unloads = new Subject<string>();\r\n\r\n  public loadRequests$(): Observable<IPluginURL> {\r\n    return this.loads;\r\n  }\r\n  public unloadRequests$(): Observable<string> {\r\n    return this.unloads;\r\n  }\r\n  public allPlugins(): IPluginURL[] {\r\n    return [...this.loadedURLs.entries()].map(p => ({ id: p[0], url: p[1] }));\r\n  }\r\n\r\n  public requestLoad(id: string, url: string) {\r\n    const p = this.loadedURLs.get(id);\r\n    if (p) {\r\n      if (p !== url) {\r\n        throw new Error(`Plugin ${id} is already loaded with another URL`);\r\n      }\r\n      return;\r\n    }\r\n    this.loadedURLs.set(id, url);\r\n    this.loads.next({ id, url });\r\n  }\r\n\r\n  public requestUnload(id: string) {\r\n    const p = this.loadedURLs.get(id);\r\n    if (!p) {\r\n      throw new Error(`Plugin ${id} is not loaded`);\r\n    }\r\n    this.loadedURLs.delete(id);\r\n    this.unloads.next(id);\r\n  }\r\n}\r\n","import { Injectable, Inject, Optional, Injector, NgModuleRef, ɵNgModuleFactory } from '@angular/core';\r\nimport { GoldenLayoutPluginDependency, PluginDependencyType } from './config';\r\nimport { Deferred } from './deferred';\r\nimport { Subject } from 'rxjs';\r\nimport { PluginURLProvider, IPluginURL } from './plugin-url.service';\r\n\r\ninterface IPluginState {\r\n  id: string,\r\n  url: string,\r\n  module: Deferred<any>,\r\n  moduleRef: NgModuleRef<any>,\r\n  script: HTMLScriptElement,\r\n};\r\n\r\n@Injectable()\r\nexport class MockPluginRegistryService {\r\n  public pluginLoaded$ = new Subject<{ id: string, module: NgModuleRef<any> }>();\r\n  public pluginUnloaded$ = new Subject<string>();\r\n  startLoadPlugin() {\r\n    throw new Error('MockPluginRegistry does not support loading/unloading');\r\n  }\r\n  startUnloadPlugin() {\r\n    throw new Error('MockPluginRegistry does not support loading/unloading');\r\n  }\r\n}\r\n\r\n/**\r\n * This class automates the loading of bundles built with ng-packagr,\r\n * registering the components with GoldenLayout\r\n * This service MUST be instantiated once per window and defines the 'public'\r\n * API for loading and unloading plugins.\r\n */\r\n@Injectable()\r\nexport class PluginRegistryService {\r\n  private availableDependencies = new Map<string, any>();\r\n  private loadedPlugins = new Map<string, IPluginState>();\r\n\r\n  public pluginLoaded$ = new Subject<{ id: string, module: NgModuleRef<any> }>();\r\n  public pluginUnloaded$ = new Subject<string>();\r\n\r\n  constructor(\r\n    @Inject(GoldenLayoutPluginDependency) @Optional() deps: PluginDependencyType[] = [],\r\n    private urlProvider: PluginURLProvider,\r\n    private injector: Injector,\r\n  ) {\r\n    console.log('Creating PluginRegistry, got', deps.length, 'additional dependency modules');\r\n    deps.forEach(x => this.availableDependencies.set(x.name, x.loader));\r\n\r\n    this.patchWindow();\r\n\r\n    this.urlProvider.loadRequests$().subscribe(p => this.load(p));\r\n    // Load all previously loaded plugins\r\n    this.urlProvider.allPlugins().forEach(p => this.load(p));\r\n  }\r\n\r\n  startLoadPlugin(id: string, url: string) {\r\n    this.urlProvider.requestLoad(id, url);\r\n  }\r\n  startUnloadPlugin(id: string) {\r\n    this.urlProvider.requestUnload(id);\r\n  }\r\n\r\n  waitForPlugin(id: string): Promise<any> {\r\n    const p = this.loadedPlugins.get(id);\r\n    if (p) {\r\n      return p.module.promise;\r\n    }\r\n\r\n    const newPlugin: IPluginState = {\r\n      id: id,\r\n      module: new Deferred<any>(),\r\n      url: null,\r\n      script: null,\r\n      moduleRef: null,\r\n    };\r\n    this.loadedPlugins.set(id, newPlugin);\r\n    return newPlugin.module.promise;\r\n  }\r\n\r\n  private patchWindow() {\r\n    (window as any).define = (moduleId: string, deps: string[], factory: (exports: any, ...deps: any[]) => void) => {\r\n      const x = this.loadedPlugins.get(moduleId);\r\n      if (!x) {\r\n        console.warn('Unknown plugin called define():', moduleId);\r\n        return;\r\n      }\r\n\r\n      // first param is exports\r\n      deps = deps.slice(1);\r\n\r\n      const depsExports = deps.map(d => {\r\n        const p = this.availableDependencies.get(d);\r\n        if (!p) {\r\n          console.warn('Plugin', moduleId, 'requested unknown dependency', d);\r\n          return Promise.resolve(undefined);\r\n        }\r\n        const promisifiedP = Promise.resolve(p);\r\n        return promisifiedP.catch(err => {\r\n          console.warn('Plugin', moduleId, 'dependency', d, 'but load failed', err);\r\n          return undefined;\r\n        });\r\n      });\r\n      Promise.all(depsExports).then(deps => {\r\n        const exports: any = {};\r\n        factory(exports, ...deps);\r\n        console.log('Plugin', moduleId, 'loaded.');\r\n        const moduleKlass = exports.MODULE;\r\n        if (!moduleKlass) {\r\n          return Promise.reject(\"No MODULE export found\");\r\n        }\r\n        const moduleFactory = new ɵNgModuleFactory(moduleKlass);\r\n        x.moduleRef = moduleFactory.create(this.injector);\r\n        x.module.resolve(exports as any);\r\n        this.pluginLoaded$.next({ id: x.id, module: x.moduleRef });\r\n      }).catch(err => {\r\n        console.warn('Failed to load plugin', moduleId, 'error', err);\r\n        x.module.reject(err);\r\n      });\r\n    };\r\n    (window as any).define.amd = true;\r\n    console.log('Window AMD shim established.');\r\n  }\r\n\r\n  private load({ id, url }: IPluginURL) {\r\n    let p = this.loadedPlugins.get(id);\r\n\r\n    // plugin is already loaded or in progress.\r\n    if (p && p.url) {\r\n      if (p.url !== url) {\r\n        throw new Error(\"Plugin is already loaded with another URL\");\r\n      }\r\n      return;\r\n    }\r\n\r\n    // !p means that p is not acitvely being waited on, so create it.\r\n    // if p is defined here it means that component construction actively\r\n    // waits on the loading of this plugin, so we don't need to recreate\r\n    // the structure here.\r\n    if (!p) {\r\n      p = {\r\n        id: id,\r\n        module: new Deferred<any>(),\r\n        url: null,\r\n        moduleRef: null,\r\n        script: null,\r\n      };\r\n    }\r\n\r\n    // Start the actual loading process\r\n    p.url = url;\r\n    this.loadedPlugins.set(id, p);\r\n\r\n    const script = document.createElement('script');\r\n    script.onerror = (e) => p.module.reject(e as any);\r\n    script.type = 'text/javascript';\r\n    script.src = url;\r\n    p.script = script;\r\n\r\n    document.body.appendChild(script);\r\n  }\r\n\r\n  private unload(id: string) {\r\n    // TBD\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const GoldenLayoutContainer = new InjectionToken('GoldenLayoutContainer');\r\nexport const GoldenLayoutComponentState = new InjectionToken('GoldenLayoutComponentState');\r\nexport const GoldenLayoutEventHub = new InjectionToken('GoldenLayoutEventHub');\r\nexport const GoldenLayoutComponentHost = new InjectionToken('GoldenLayoutComponentHost');\r\n","import { GlOnResize, GlOnShow, GlOnHide, GlOnTab, GlOnClose, GlOnPopin, GlOnUnload, GlOnPopout, GlHeaderItem } from \"./hooks\";\r\n\r\n/**\r\n * Type guard which determines if a component implements the GlOnResize interface.\r\n */\r\nexport function implementsGlOnResize(obj: any): obj is GlOnResize {\r\n  return typeof obj === 'object' && typeof obj.glOnResize === 'function';\r\n}\r\n\r\n/**\r\n * Type guard which determines if a component implements the GlOnShow interface.\r\n */\r\nexport function implementsGlOnShow(obj: any): obj is GlOnShow {\r\n  return typeof obj === 'object' && typeof obj.glOnShow === 'function';\r\n}\r\n\r\n/**\r\n * Type guard which determines if a component implements the GlOnHide interface.\r\n */\r\nexport function implementsGlOnHide(obj: any): obj is GlOnHide {\r\n  return typeof obj === 'object' && typeof obj.glOnHide === 'function';\r\n}\r\n\r\n/**\r\n * Type guard which determines if a component implements the GlOnTab interface.\r\n */\r\nexport function implementsGlOnTab(obj: any): obj is GlOnTab {\r\n  return typeof obj === 'object' && typeof obj.glOnTab === 'function';\r\n}\r\n\r\n/**\r\n * Type guard which determines if a component implements the GlOnClose interface.\r\n */\r\nexport function implementsGlOnClose(obj: any): obj is GlOnClose {\r\n  return typeof obj === 'object' && typeof obj.glOnClose === 'function';\r\n}\r\n\r\nexport function implementsGlOnPopin(obj: any): obj is GlOnPopin {\r\n  return typeof obj === 'object' && typeof obj.glOnPopin === 'function';\r\n}\r\nexport function implementsGlOnUnload(obj: any): obj is GlOnUnload {\r\n  return typeof obj === 'object' && typeof obj.glOnUnload === 'function';\r\n}\r\nexport function implementsGlOnPopout(obj: any): obj is GlOnPopout {\r\n  return typeof obj === 'object' && typeof obj.glOnPopout === 'function';\r\n}\r\nexport function implementsGlHeaderItem(obj: any): obj is GlHeaderItem {\r\n  return typeof obj === 'object' && typeof obj.headerComponent === 'function';\r\n}\r\n\r\nexport const uuid = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n","import { Component, ViewEncapsulation, Inject, OnInit, ComponentRef, OnDestroy } from '@angular/core';\r\nimport { GlHeaderItem, GlOnHide, GlOnShow, GlOnResize, GlOnTab } from './hooks';\r\nimport { GoldenLayoutComponentHost, GoldenLayoutComponentState, GoldenLayoutContainer } from './tokens';\r\nimport { implementsGlOnResize, implementsGlOnHide, implementsGlOnShow, implementsGlOnTab } from './type-guards';\r\n\r\n@Component({\r\n  selector: 'gl-wrapper',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `<div class=\"wrapper\"></div>`\r\n})\r\nexport class WrapperComponent implements\r\n  GlHeaderItem,\r\n  OnInit,\r\n  OnDestroy,\r\n  GlOnHide,\r\n  GlOnShow,\r\n  GlOnResize,\r\n  GlOnTab\r\n {\r\n  get headerComponent() {\r\n    if (!this.originalComponent || !this.originalComponent.instance) {\r\n      return undefined;\r\n    }\r\n    return this.originalComponent.instance.then(x => x.instance.headerComponent);\r\n  }\r\n  get additionalTokens() {\r\n    if (!this.originalComponent || !this.originalComponent.instance) {\r\n      return undefined;\r\n    }\r\n    return this.originalComponent.instance.then(x => x.instance.additionalTokens);\r\n  }\r\n\r\n  private originalComponent: any;\r\n  private destroyed = false;\r\n  private initialized = false;\r\n\r\n  constructor(\r\n    @Inject(GoldenLayoutComponentHost) private host: any,\r\n    @Inject(GoldenLayoutContainer) private container: any,\r\n    @Inject(GoldenLayoutComponentState) private state: any,\r\n  ) {\r\n    this.originalComponent = (this.host.getGoldenLayoutInstance() as any)._getAllComponents()[this.state.originalId];\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.originalComponent.instance.then((componentRef: ComponentRef<any>) => {\r\n      if (this.destroyed || this.initialized) {\r\n        return;\r\n      }\r\n      this.redock(componentRef, this.container.getElement());\r\n      this.initialized = true;\r\n    })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.originalComponent.instance.then((cr: ComponentRef<any>) => {\r\n      if (!this.initialized || this.destroyed) {\r\n        return;\r\n      }\r\n      this.redock(cr, this.originalComponent.container.getElement());\r\n      this.destroyed = true;\r\n    })\r\n  }\r\n\r\n  private redock(componentRef: ComponentRef<any>, to: JQuery) {\r\n    const el = $(componentRef.location.nativeElement);\r\n    el.remove();\r\n    to.append(el);\r\n    if (implementsGlOnResize(componentRef.instance)) {\r\n      componentRef.instance.glOnResize();\r\n    }\r\n  }\r\n\r\n  glOnHide() {\r\n    this.originalComponent.instance.then((cr: ComponentRef<any>) => {\r\n      if (implementsGlOnHide(cr.instance)) {\r\n        cr.instance.glOnHide();\r\n      }\r\n    });\r\n  }\r\n  glOnShow() {\r\n    this.originalComponent.instance.then((cr: ComponentRef<any>) => {\r\n      if (implementsGlOnShow(cr.instance)) {\r\n        cr.instance.glOnShow();\r\n      }\r\n    });\r\n  }\r\n  glOnResize() {\r\n    this.originalComponent.instance.then((cr: ComponentRef<any>) => {\r\n      if (implementsGlOnResize(cr.instance)) {\r\n        cr.instance.glOnResize();\r\n      }\r\n    });\r\n  }\r\n  glOnTab(tab: any) {\r\n    this.originalComponent.instance.then((cr: ComponentRef<any>) => {\r\n      if (implementsGlOnTab(cr.instance)) {\r\n        debugger;\r\n        cr.instance.glOnTab(this.originalComponent.tab);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Inject, Injectable, Optional, Type } from '@angular/core';\r\nimport { ComponentType, GoldenLayoutComponents } from './config';\r\nimport { PluginRegistryService } from './plugin-registry.service';\r\nimport { Deferred } from './deferred';\r\nimport { WrapperComponent } from './wrapper.component';\r\n\r\n@Injectable()\r\nexport class ComponentRegistryService {\r\n  private components = new Map<string, Type<any>>();\r\n  private awaitedComponents = new Map<string, Deferred<Type<any>>>();\r\n\r\n  constructor(\r\n    @Inject(GoldenLayoutComponents) @Optional() initialComponents?: ComponentType[],\r\n    @Optional() private pluginRegistry?: PluginRegistryService,\r\n  ) {\r\n    (initialComponents || []).forEach(c => this.registerComponent(c));\r\n    this.registerComponent({\r\n      name: 'gl-wrapper',\r\n      type: WrapperComponent,\r\n    });\r\n\r\n    this.pluginRegistry?.pluginLoaded$.subscribe(({ id, module }) => {\r\n      const registeredTokens = module.injector.get(GoldenLayoutComponents, []);\r\n      console.log('Plugin', id, 'wants to register', registeredTokens.length, 'components');\r\n      registeredTokens.forEach(c => this.registerComponent({ ...c, plugin: id }));\r\n    });\r\n  }\r\n\r\n  public registeredComponents(): ComponentType[] {\r\n    return [...this.components.entries()].map((e): ComponentType => ({ name: e[0], type: e[1] }));\r\n  }\r\n\r\n  // This is only for use by the GoldenLayoutComponent\r\n  public componentMap(): Map<string, Type<any>> {\r\n      return this.components;\r\n  }\r\n\r\n  public registerComponent(component: ComponentType) {\r\n    const otherComponent = this.components.get(component.name);\r\n    if (!!otherComponent && otherComponent !== component.type) {\r\n      const err = new Error(`Failed to register component, ${component.name} is already taken by another component: ${otherComponent}`);\r\n      throw err;\r\n    }\r\n    this.components.set(component.name, component.type);\r\n    const d = this.awaitedComponents.get(component.name);\r\n    if (d) {\r\n      this.awaitedComponents.delete(component.name);\r\n      d.resolve(component.type);\r\n    }\r\n  }\r\n\r\n  public waitForComponent(component: string): Promise<Type<any>> {\r\n    const c = this.components.get(component);\r\n    if (c) {\r\n      return Promise.resolve(c);\r\n    }\r\n\r\n    let d = this.awaitedComponents.get(component);\r\n    if (!d) {\r\n      d = new Deferred<Type<any>>();\r\n      this.awaitedComponents.set(component, d);\r\n    }\r\n    return d.promise;\r\n  }\r\n}\r\n","import { InjectionToken, Type } from '@angular/core';\r\n\r\n/**\r\n * Inject an angular component using this token to indicate\r\n * that the component should be rendered when there is an error rendering\r\n * the actual component.\r\n * Errors could be exceptions thrown at construction time or a not-registered component.\r\n */\r\nexport const FallbackComponent = new InjectionToken<Type<any>>(\"fallback component\");\r\n\r\n/**\r\n * This token is injected into the FallbackComponent when it is instantiated and contains\r\n * the name of the component that failed to initialize.\r\n */\r\nexport const FailedComponent = new InjectionToken<string>(\"failed component\");\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class RootWindowService {\r\n\r\n  constructor() {}\r\n\r\n  public isChildWindow(): boolean {\r\n    try {\r\n      return !!window.opener && !!window.opener.location.href;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getRootWindow(): Window & typeof globalThis {\r\n    return this.isChildWindow() ? window.opener : window;\r\n  }\r\n}\r\n","import { Injectable, ApplicationRef, Injector } from '@angular/core';\r\nimport { RootWindowService } from './root-window.service';\r\n\r\n@Injectable()\r\nexport class MockWindowSynchronizerService {\r\n  restoreAppRefTick() {}\r\n  onUnload() {}\r\n}\r\n\r\n@Injectable()\r\nexport class WindowSynchronizerService {\r\n  private topWindow: Window & typeof globalThis;\r\n  private isChildWindow: boolean;\r\n  private unloaded = false;\r\n\r\n  constructor(\r\n    private appref: ApplicationRef,\r\n    private rootService: RootWindowService,\r\n    private injector: Injector,\r\n  ) {\r\n    this.topWindow = this.rootService.getRootWindow();\r\n    this.isChildWindow = this.rootService.isChildWindow();\r\n\r\n    if (this.isChildWindow) {\r\n      window.document.title = window.document.URL;\r\n      (console as any).__log = console.log;\r\n      console.log = (...args: any[]) => this.topWindow.console.log('[CHILD] =>', ...args);\r\n    }\r\n\r\n    // Multi-Window compatibility.\r\n    // We need to synchronize all appRefs that could tick\r\n    // Store them in a global array and also overwrite the injector using the injector from the main window.\r\n    let anyWin = this.topWindow as any;\r\n    if (!this.isChildWindow) {\r\n      anyWin.__apprefs = [];\r\n      anyWin.__injector = this.injector;\r\n    }\r\n\r\n    // attach the application reference to the root window, save the original 'tick' method\r\n    anyWin.__apprefs.push(this.appref);\r\n    (this.appref as any).__tick = this.appref.tick;\r\n\r\n    // Overwrite the tick method running all apprefs in their zones.\r\n    this.appref.tick = (): void => {\r\n      for (const ar of (this.topWindow as any).__apprefs) {\r\n        ar._zone.run(() => ar.__tick());\r\n      }\r\n    };\r\n  }\r\n\r\n  public restoreAppRefTick() {\r\n    this.appref.tick = (this.appref as any).__tick;\r\n  }\r\n\r\n  public onUnload() {\r\n    if (this.unloaded) {\r\n      return;\r\n    }\r\n    this.unloaded = true;\r\n    if (this.isChildWindow) {\r\n      const index = (this.topWindow as any).__apprefs.indexOf(this.appref);\r\n      if (index >= 0) {\r\n        (this.topWindow as any).__apprefs.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  isDevMode,\r\n  ComponentFactoryResolver,\r\n  HostListener,\r\n  ViewContainerRef,\r\n  ElementRef,\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ApplicationRef,\r\n  Optional,\r\n  Inject,\r\n  NgZone,\r\n  Injector,\r\n  ViewChild,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  StaticProvider,\r\n  Type,\r\n  ComponentRef,\r\n  SkipSelf,\r\n} from '@angular/core';\r\nimport * as GoldenLayout from 'golden-layout';\r\nimport { ComponentRegistryService } from './component-registry.service';\r\nimport { FallbackComponent, FailedComponent } from './fallback';\r\nimport { RootWindowService } from './root-window.service';\r\nimport { Observable, Subscription, BehaviorSubject, of, Subject } from 'rxjs';\r\nimport { switchMap, takeUntil, distinctUntilChanged } from 'rxjs/operators';\r\nimport {\r\n  implementsGlOnResize,\r\n  implementsGlOnShow,\r\n  implementsGlOnHide,\r\n  implementsGlOnTab,\r\n  implementsGlOnClose,\r\n  implementsGlOnPopin,\r\n  implementsGlOnUnload,\r\n  implementsGlOnPopout,\r\n  uuid,\r\n} from './type-guards';\r\nimport { Deferred } from './deferred';\r\nimport { WindowSynchronizerService } from './window-sync.service';\r\nimport {\r\n  GoldenLayoutContainer,\r\n  GoldenLayoutComponentState,\r\n  GoldenLayoutEventHub,\r\n  GoldenLayoutComponentHost\r\n} from './tokens';\r\nimport { IExtendedGoldenLayoutConfig } from './config';\r\n\r\ninterface ComponentInitCallback extends Function {\r\n  (container: GoldenLayout.Container, componentState: any): void;\r\n}\r\n\r\n// We need to wrap some golden layout internals, so we can intercept close and 'close stack'\r\n// For close, the tab is wrapped and the close element to change the event handler to close the correct container.\r\nconst lm = GoldenLayout as any;\r\nconst isCloned = (contentItem: GoldenLayout.ContentItem) => contentItem.isComponent &&\r\ncontentItem.config &&\r\n(contentItem.config as GoldenLayout.ComponentConfig).componentState &&\r\n(contentItem.config as GoldenLayout.ComponentConfig).componentState.originalId;\r\n\r\nexport const GetComponentFromLayoutManager = (lm: GoldenLayout, id: string): GoldenLayout.ContentItem => {\r\n  const itemList = lm.root.getItemsById(id);\r\n  if (itemList.length !== 1) {\r\n    console.warn('non unique ID found: ' + id);\r\n    return undefined;\r\n  }\r\n  return itemList[0];\r\n};\r\nconst originalComponent = (contentItem: GoldenLayout.ContentItem): any => {\r\n  const comp = GetComponentFromLayoutManager(\r\n    contentItem.layoutManager,\r\n    (contentItem.config as GoldenLayout.ComponentConfig).componentState.originalId,\r\n  );\r\n  if (!comp.isComponent) {\r\n    throw new Error('Expected component');\r\n  }\r\n  return comp;\r\n};\r\nconst tabFromId = (contentItem: GoldenLayout.ContentItem) => {\r\n  const ci = originalComponent(contentItem);\r\n  return ci ? ci.tab : undefined;\r\n};\r\n// This code wraps the original golden-layout Tab\r\n// A tab is instantiated by the golden-layout Header\r\n// We rebind the close event listener to properly dispose the angular item container\r\n// In order to destroy the angular component ref and be able to defer the close.\r\nconst originalTab = lm.__lm.controls.Tab;\r\nconst newTab = function(header, tabContentItem) {\r\n  const tab = new originalTab(header, tabContentItem);\r\n\r\n  /**\r\n   * This piece of code implements close functionality for the tab close.\r\n   * If we have a cloned tab, i.e. one which is contained in a maximised dummy stack\r\n   * we close the container backing the tab.\r\n   */\r\n  tab.closeElement.off('click touchstart');\r\n  tab.closeElement.on('click touchstart', (ev) => {\r\n    ev.stopPropagation();\r\n    if (isCloned(tab.contentItem)) {\r\n      const c = originalComponent(tab.contentItem);\r\n      if (c && c.isComponent) {\r\n        // If we have a dummy tab, close the actual tab behind it.\r\n        c.container.close();\r\n      }\r\n    } else {\r\n      // Otherwise close our own tab.\r\n      tab.contentItem.container.close();\r\n    }\r\n  });\r\n\r\n  /**\r\n   * This script emits a tabActivated event for the correct content item\r\n   * when running in a maximised dummy stack.\r\n   */\r\n  tab.element.on('mousedown touchstart', ev => {\r\n    let contentItem = tab.contentItem;\r\n    if (isCloned(contentItem)) {\r\n      contentItem = originalComponent(tab.contentItem);\r\n    }\r\n    contentItem.layoutManager.emit('tabActivated', contentItem);\r\n  });\r\n\r\n  if (isCloned(tab.contentItem) && tab._layoutManager.config.settings.reorderEnabled === true) {\r\n    // Reimplement tab drag start by redirecting the tab state.\r\n    tab.element.on('mousedown touchstart', (ev) => {\r\n      const originalTab = tabFromId(tab.contentItem);\r\n      if (originalTab && originalTab._dragListener) {\r\n        const dl = originalTab._dragListener;\r\n        const destroyDummy = () => {\r\n          dl.off('dragStart', destroyDummy, dl);\r\n          if (header.layoutManager._maximisedItem === tab.contentItem.parent) {\r\n            tab.contentItem.parent.toggleMaximise();\r\n          }\r\n        };\r\n        dl.off('dragStart', originalTab._onDragStart, originalTab);\r\n        dl.on('dragStart', destroyDummy, dl);\r\n        dl.on('dragStart', originalTab._onDragStart, originalTab);\r\n        dl._fDown(ev);\r\n      }\r\n    });\r\n  }\r\n  return tab;\r\n};\r\nnewTab._template = '<li class=\"lm_tab\"><i class=\"lm_left\"></i>' +\r\n'<span class=\"lm_title\"></span><div class=\"lm_close_tab\"></div>' +\r\n'<i class=\"lm_right\"></i></li>';\r\nlm.__lm.controls.Tab = newTab;\r\n\r\n\r\n// Header is wrapped to catch the maximise and close buttons.\r\nconst originalHeader = lm.__lm.controls.Header;\r\nconst newHeader = function(layoutManager, parent) {\r\n  const maximise = parent._header['maximise'];\r\n  const popout = parent._header['popout'];\r\n  if (maximise && layoutManager.config.settings.maximiseAllItems === true) {\r\n    // Check whether we should maximise all stacks and if so, force the header to\r\n    // not generate a maximise button.\r\n    delete parent._header['maximise'];\r\n  }\r\n  if (popout && layoutManager.config.settings.maximiseAllItems === true) {\r\n    delete parent._header['popout'];\r\n  }\r\n\r\n  // Generate the original header\r\n  const header = new originalHeader(layoutManager, parent);\r\n\r\n  // Check whether we should maximise all stacks, and if so, generate a custom popout button\r\n  // but keep the order with the maximise and close button\r\n  if (popout && layoutManager.config.settings.maximiseAllItems === true) {\r\n    header.popoutButton = new lm.__lm.controls.HeaderButton(header, popout, 'lm_popout', () => {\r\n      let contentItem = header.activeContentItem;\r\n      if (isCloned(contentItem)) {\r\n        // We are within the dummy stack, our component is a wrapper component\r\n        // and has a reference to the original (= wrapped) component.\r\n        // Therefore, popping out the whole stack would be stupid, because it wouldn't leave\r\n        // any item in this window.\r\n        contentItem = originalComponent(contentItem);\r\n        contentItem.popout();\r\n      } else if (layoutManager.config.settings.popoutWholeStack === true) {\r\n        // We have a regular stack, so honor the popoutWholeStack setting.\r\n        header.parent.popout();\r\n      } else {\r\n        contentItem.popout();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Check whether we should maximise all stacks, and if so, generate a custom maximise button\r\n  // but keep the order with the close button.\r\n  if (maximise && layoutManager.config.settings.maximiseAllItems === true) {\r\n    header.maximiseButton = new lm.__lm.controls.HeaderButton(header, maximise, 'lm_maximise', () => {\r\n      // The maximise button was clicked, so create a dummy stack, containing a wrapper component for each opened component.\r\n      if (layoutManager._maximisedItem === parent) {\r\n        parent.toggleMaximise();\r\n      } else {\r\n        layoutManager.generateAndMaximiseDummyStack(parent);\r\n      }\r\n    });\r\n  }\r\n  if (header.closeButton) {\r\n    header.closeButton._$destroy();\r\n    const label = header._getHeaderSetting('close');\r\n    header.closeButton = new lm.__lm.controls.HeaderButton(header, label, 'lm_close', () => {\r\n      header.parent.contentItems.forEach(ci => {\r\n        ci.container.close();\r\n      });\r\n    });\r\n  }\r\n  return header;\r\n};\r\nnewHeader._template = [\r\n\t'<div class=\"lm_header\">',\r\n\t'<ul class=\"lm_tabs\"></ul>',\r\n\t'<ul class=\"lm_controls\"></ul>',\r\n\t'<ul class=\"lm_tabdropdown_list\"></ul>',\r\n\t'</div>'\r\n].join( '' );\r\nlm.__lm.controls.Header = newHeader;\r\n\r\n\r\n// Patch the drag proxy in order to have an itemDragged event.\r\nconst origDragProxy = lm.__lm.controls.DragProxy;\r\nconst dragProxy = function(x, y, dragListener, layoutManager, contentItem, originalParent) {\r\n  layoutManager.emit('itemDragged', contentItem);\r\n  return new origDragProxy(x, y, dragListener, layoutManager, contentItem, originalParent);\r\n}\r\ndragProxy._template = origDragProxy._template;\r\nlm.__lm.controls.DragProxy = dragProxy;\r\n\r\n// Patch the stack in order to have an activeContentItemChanged$ observable\r\nconst origStack = lm.__lm.items.Stack;\r\nfunction MyStack(lm, config, parent) {\r\n  origStack.call(this, lm, config, parent);\r\n  this.activeContentItem$ = new BehaviorSubject<any>(null);\r\n  const callback = (ci) => {\r\n    if (this.activeContentItem$) {\r\n      this.activeContentItem$.next(ci)\r\n    };\r\n  };\r\n  this.on('activeContentItemChanged', callback);\r\n  const origDestroy = this._$destroy;\r\n  this.___destroyed = false;\r\n  this._$destroy = () => {\r\n    if (this.___destroyed) {\r\n      return;\r\n    }\r\n    this.___destroyed = true;\r\n    this.off('activeContentItemChanged', callback);\r\n    this.activeContentItem$.complete();\r\n    this.activeContentItem$ = null;\r\n    origDestroy.call(this);\r\n  };\r\n  return this;\r\n}\r\nMyStack.prototype = Object.create(origStack.prototype);\r\n\r\n// Force stacks to be flattened.\r\nMyStack.prototype['addChild'] = function(contentItem: GoldenLayout.ItemConfig, index: number) {\r\n  if (contentItem.type === 'stack') {\r\n    // We try to pop in a stack into another stack (i.e. nested tab controls.)\r\n    // This breaks the other stuff in custom header components, therefore it's not recommended.\r\n    // So we add the items directly into this stack.\r\n    (contentItem.content || []).forEach((ci, idx) => origStack.prototype.addChild.call(this, ci, index + idx));\r\n    if (contentItem.content.length) {\r\n      this.setActiveContentItem(this.contentItems[index + (contentItem as any).activeItemIndex]);\r\n    }\r\n  } else {\r\n    origStack.prototype.addChild.call(this, contentItem, index);\r\n  }\r\n};\r\nMyStack.prototype['setSize'] = function() {\r\n  if (this.layoutManager._maximisedItem === this && this.layoutManager.config.settings.maximiseAllItems === true) {\r\n    // Actually enforce that this item will be the correct size\r\n    this.element.width(this.layoutManager.container.width());\r\n    this.element.height(this.layoutManager.container.height());\r\n  }\r\n  origStack.prototype.setSize.call(this);\r\n};\r\nlm.__lm.items.Stack = MyStack;\r\n\r\nconst origPopout = lm.__lm.controls.BrowserPopout;\r\nconst popout = function(config: GoldenLayout.ItemConfig[], dimensions, parent, index, lm) {\r\n  if (config.length !== 1) {\r\n    console.warn('This should not happen, permitting', config);\r\n  } else {\r\n    if (config[0].type === 'component') {\r\n      config = [{\r\n        type: 'stack',\r\n        title: config[0].title, // Required for adjustToWindowMode to work. (Line 1282 in 1.5.9)\r\n        content: [config[0]],\r\n      }];\r\n    }\r\n  }\r\n  return new origPopout(config, dimensions, parent, index, lm);\r\n};\r\nlm.__lm.controls.BrowserPopout = popout;\r\n\r\n\r\n// Fixup for nested golden-layout instances.\r\n// nested instances should be able to be docked out completely\r\n// but the golden layout will recognize its query string and be incorrectly nested.\r\nconst getQueryStringParam = lm.__lm.utils.getQueryStringParam;\r\nlet firstQueryString = true;\r\nlm.__lm.utils.getQueryStringParam = (param: string) => {\r\n  if (firstQueryString) {\r\n    firstQueryString = false;\r\n    return getQueryStringParam(param);\r\n  }\r\n  return null;\r\n}\r\n@Component({\r\n  selector: 'golden-layout-root',\r\n  styles: [`\r\n    .ng-golden-layout-root {\r\n      width:100%;\r\n      height:100%;\r\n    }`\r\n  ],\r\n  template: `<div class=\"ng-golden-layout-root\" #glroot></div>`\r\n})\r\nexport class GoldenLayoutComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() layout: Observable<IExtendedGoldenLayoutConfig>;\r\n  @Output() stateChanged = new EventEmitter<never>();\r\n  @Output() tabActivated = new EventEmitter<GoldenLayout.ContentItem>();\r\n\r\n  @ViewChild('glroot', { static: true }) private el: ElementRef;\r\n\r\n  private goldenLayout: GoldenLayout = null;\r\n  private onUnloaded = new Deferred<void>();\r\n  private stateChangePaused = false;\r\n  private stateChangeScheduled = false;\r\n  private tabsList = new BehaviorSubject<{ [tabId: string]: GoldenLayout.ContentItem }>({});\r\n  pushStateChange = () => {\r\n    // For each state change, we want to refresh the list of the opened components. At the moment, we only care about the keys.\r\n    this.tabsList.next((this.goldenLayout as any)._getAllComponents());\r\n    if (this.stateChangePaused || this.stateChangeScheduled) {\r\n      return;\r\n    }\r\n    this.stateChangeScheduled = true;\r\n    window.requestAnimationFrame(() => {\r\n      this.stateChangeScheduled = false;\r\n      this.stateChanged.emit()\r\n    });\r\n  };\r\n\r\n  resumeStateChange = () => this.stateChangePaused = false;\r\n  pauseStateChange = () => this.stateChangePaused = true;\r\n  pushTabActivated = (ci: GoldenLayout.ContentItem) => {\r\n    this.tabActivated.emit(ci);\r\n  }\r\n\r\n  private fallbackType: ComponentInitCallback = null;\r\n  private layoutSubscription: Subscription;\r\n  private openedComponents = [];\r\n  private poppedIn = false;\r\n  private _eventEmitter = new lm.__lm.utils.EventEmitter();\r\n\r\n  @HostListener('window:resize')\r\n  public onResize(): void {\r\n    if (this.goldenLayout) {\r\n      this.goldenLayout.updateSize();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private rootService: RootWindowService,\r\n    private componentRegistry: ComponentRegistryService,\r\n    private viewContainer: ViewContainerRef,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private ngZone: NgZone,\r\n    private readonly injector: Injector,\r\n    private windowSync: WindowSynchronizerService,\r\n    @Optional() @SkipSelf() private parentGoldenLayout: GoldenLayoutComponent,\r\n    @Optional() @Inject(FallbackComponent) private readonly fallbackComponent: any\r\n  ) {\r\n    console.log(parentGoldenLayout);\r\n    if (!!this.fallbackComponent) {\r\n      this.fallbackType = this.buildConstructor(this.fallbackComponent);\r\n    }\r\n\r\n    if (isDevMode()) console.log(`Create@${this.rootService.isChildWindow ? 'child' : 'root'}!`);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (isDevMode()) console.log(`Init@${this.rootService.isChildWindow ? 'child' : 'root'}!`);\r\n\r\n    this.layoutSubscription = this.layout.subscribe(layout => {\r\n      this.destroyGoldenLayout();\r\n      this.initializeGoldenLayout(layout);\r\n    });\r\n  }\r\n  // Map beforeunload to onDestroy to simplify the handling\r\n  @HostListener('window:beforeunload')\r\n  public beforeUnload() {\r\n    if (this.poppedIn) {\r\n      this.onUnloaded.promise.then(() => this.ngOnDestroy());\r\n      this.onUnloaded.resolve();\r\n      this.windowSync.onUnload();\r\n    }\r\n  }\r\n\r\n  // Map beforeunload to onDestroy to simplify the handling\r\n  @HostListener('window:pagehide')\r\n  public pageHide() {\r\n    if (!this.poppedIn) {\r\n      this.openedComponents.forEach(c => {\r\n        if (implementsGlOnUnload(c)) {\r\n          c.glOnUnload();\r\n        }\r\n      });\r\n    }\r\n    this.onUnloaded.promise.then(() => this.ngOnDestroy());\r\n    this.onUnloaded.resolve();\r\n    this.windowSync.onUnload();\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (isDevMode()) {\r\n      console.log(`Destroy@${this.rootService.isChildWindow ? 'child' : 'root'}!`);\r\n    }\r\n    this.layoutSubscription.unsubscribe();\r\n\r\n    // restore the original tick method.\r\n    // this appens in two cases:\r\n    // either the window is closed, after that it's not important to restore the tick method\r\n    // or within the root window, where we HAVE to restore the original tick method\r\n    this.windowSync.restoreAppRefTick();\r\n    this.destroyGoldenLayout();\r\n    // Discard all previously made subscriptions.\r\n    this._eventEmitter._mSubscriptions = { [lm.__lm.utils.EventEmitter.ALL_EVENT]: [] };\r\n  }\r\n\r\n  public getGoldenLayoutInstance(): GoldenLayout {\r\n    if (!this.goldenLayout) {\r\n      throw new Error('Component is not initialized yet');\r\n    }\r\n    return this.goldenLayout;\r\n  }\r\n\r\n  public addEvent(kind: string, callback: Function, context?: any) {\r\n    this._eventEmitter.on(kind, callback, context);\r\n  }\r\n\r\n  public getSerializableState(): any {\r\n    if (this.goldenLayout) {\r\n      const configObj = this.goldenLayout.toConfig();\r\n      const wrapperMax = (this.goldenLayout as any).__wrapperMaximisedItemId;\r\n      if (wrapperMax) {\r\n        configObj.maximisedItemId = wrapperMax;\r\n        const filterContent = (ci) => {\r\n          if (ci.type === 'stack' && ci.isDummy) {\r\n            return false;\r\n          }\r\n          if (ci.type !== 'component') {\r\n            ci.content = ci.content.filter(filterContent);\r\n          }\r\n          return true;\r\n        }\r\n        configObj.content = configObj.content.filter(filterContent);\r\n      }\r\n      return configObj;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public getComponents(): { [id: string]: GoldenLayout.ContentItem } {\r\n    return (this.goldenLayout as any)._getAllComponents();\r\n  }\r\n\r\n  public closeComponent(component: string) {\r\n    const c = GetComponentFromLayoutManager(this.goldenLayout, component);\r\n    if (!c) {\r\n      return;\r\n    }\r\n    c.remove();\r\n  }\r\n\r\n  public focusComponent(component: string) {\r\n    const c = GetComponentFromLayoutManager(this.goldenLayout, component);\r\n    if (!c) {\r\n      return;\r\n    }\r\n    c.parent.setActiveContentItem(c);\r\n  }\r\n\r\n  public createNewComponent(config: GoldenLayout.ComponentConfig, componentToDock?: string): Promise<ComponentRef<any>> {\r\n    if (!this.goldenLayout) {\r\n      throw new Error(\"golden layout is not initialized\");\r\n    }\r\n    let myConfig: GoldenLayout.ItemConfig = config;\r\n    const root = this.goldenLayout.root;\r\n    let element: GoldenLayout.ContentItem = null;\r\n    if (componentToDock) {\r\n      const c = GetComponentFromLayoutManager(this.goldenLayout, componentToDock);\r\n      if (c.parent.isStack) {\r\n        element = c.parent;\r\n      } else {\r\n        const stack = this.goldenLayout.createContentItem({\r\n          type: 'stack',\r\n          width: c.parent.config.width,\r\n          height: c.parent.config.height,\r\n          content: [],\r\n        }) as any;\r\n        (c.parent.replaceChild as any)(c, stack, false);\r\n        stack.addChild(c);\r\n        element = stack;\r\n      }\r\n    } else {\r\n      if (!root.contentItems || root.contentItems.length === 0) {\r\n        element = root;\r\n        // Ensure there is a stack when closing ALL items and creating a new item.\r\n        myConfig = {\r\n          type: 'stack',\r\n          content: [{\r\n            ...myConfig,\r\n            type: 'component',\r\n          }],\r\n        };\r\n      } else {\r\n        element = this.findStack(root.contentItems);\r\n      }\r\n    }\r\n    if (element === null) {\r\n      throw new Error(\"this should never happen!\");\r\n    }\r\n\r\n    const content = this.goldenLayout.createContentItem(myConfig) as any;\r\n    element.addChild(content);\r\n    if (content.isComponent) {\r\n      // Usually\r\n      return content.instance;\r\n    } else if (content.isStack && content.contentItems.length === 1) {\r\n      return content.contentItems[0].instance; // The case when this is the first component.\r\n    } else {\r\n      return content;\r\n    }\r\n  }\r\n\r\n  private findStack(contentItems: GoldenLayout.ContentItem[]): GoldenLayout.ContentItem {\r\n    if (!contentItems) {\r\n      return null;\r\n    }\r\n    for (const x of contentItems) {\r\n      if (x.isStack) {\r\n        if ((x.config as any).isDummy) {\r\n          continue;\r\n        }\r\n        return x;\r\n      }\r\n      const s = this.findStack(x.contentItems);\r\n      if (s !== null) {\r\n        return s;\r\n      }\r\n    }\r\n  }\r\n\r\n  private destroyGoldenLayout(): void {\r\n    if (!this.goldenLayout) {\r\n      return;\r\n    }\r\n    this.goldenLayout.off('stateChanged', this.pushStateChange);\r\n    this.goldenLayout.off('itemDropped', this.resumeStateChange);\r\n    this.goldenLayout.off('itemDragged', this.pauseStateChange);\r\n    this.goldenLayout.off('tabActivated', this.pushTabActivated);\r\n    this.goldenLayout.off('initialised');\r\n    this.goldenLayout.off(lm.__lm.utils.EventEmitter.ALL_EVENT, this._eventEmitter.emit, this._eventEmitter);\r\n    this.goldenLayout.destroy();\r\n    this.goldenLayout = null;\r\n  }\r\n\r\n  private initializeGoldenLayout(layout: any): void {\r\n    this.goldenLayout = new GoldenLayout(layout, $(this.el.nativeElement));\r\n    const origPopout = this.goldenLayout.createPopout.bind(this.goldenLayout);\r\n    this.goldenLayout.createPopout = (item: GoldenLayout.ContentItem, dim, parent, index) => {\r\n      /**\r\n       * Traverse the component tree below the item we're trying to pop out.\r\n       * This has basically two cases:\r\n       * a) we have a component to popout (or end up at a component somewhen)\r\n       *    for components, contentItems is either undefined or empty, so ignore it\r\n       *    during the children push.\r\n       *    however, for components, we need to check for glOnPopout and call it.\r\n       * b) everything else, where contentItems is a non-empty array.\r\n       *    For these parts, we need to consider all children recursively.\r\n       *\r\n       * Here, an iterative algorithm was chosen.\r\n       */\r\n      const rec = [item];\r\n      while(rec.length) {\r\n        const itemToProcess = rec.shift();\r\n        if (itemToProcess.contentItems && itemToProcess.contentItems.length > 0) {\r\n          rec.push(...itemToProcess.contentItems);\r\n        }\r\n        if (itemToProcess.isComponent) {\r\n          const component = (itemToProcess as any).container.__ngComponent;\r\n          if (component && implementsGlOnPopout(component)) {\r\n            component.glOnPopout();\r\n          }\r\n        }\r\n      }\r\n      return origPopout(item, dim, parent, index);\r\n    }\r\n    /**\r\n     * buildComponentMap creates an object of all opened components below the given item.\r\n     * object keys are component IDs, object values the component with the ID.\r\n     */\r\n    const buildComponentMap = (item: GoldenLayout.ContentItem) => {\r\n      let ret = {};\r\n      for (const ci of item.contentItems) {\r\n        if (ci.isComponent) {\r\n          if (ci.config && (ci.config as any).componentState && (ci.config as any).componentState.originalId) {\r\n            // Skip the dummy components\r\n            continue;\r\n          }\r\n          ret[ci.id] = ci;\r\n        } else {\r\n          ret = { ...ret, ...buildComponentMap(ci) };\r\n        }\r\n      }\r\n      return ret;\r\n    };\r\n    (this.goldenLayout as any)._getAllComponents = () => buildComponentMap(this.goldenLayout.root);\r\n    (this.goldenLayout as any).generateAndMaximiseDummyStack = (parent, item) => {\r\n      /**\r\n       * This function creates a dummy stack, which is being used if 'maximiseAllItems' is true.\r\n       * The dummy stack contains a dummy component for each component opened in the real layout.\r\n       * It will furthermore track component closes/spawns and create/close the dummy components accordingly.\r\n       * parent is the parent of the item we want to maximise\r\n       * item is the item which was active when we wanted to maximise it.\r\n       * required to set the active item index.\r\n       */\r\n      const openedComponents = buildComponentMap(this.goldenLayout.root);\r\n      const componentIdList = Object.keys(openedComponents);\r\n      if (componentIdList.length === 0) {\r\n        return; // How did we get here?!\r\n      }\r\n\r\n      // We only have a single child, so we restore the original behavior\r\n      const rootContentItem = this.goldenLayout.root.contentItems[0];\r\n      if (rootContentItem.isStack) {\r\n        rootContentItem.toggleMaximise();\r\n        return;\r\n      }\r\n\r\n      /**\r\n       * At this point, there are at least two children, so use the dummy component.\r\n       */\r\n      const config = {\r\n        type: 'stack',\r\n        content: componentIdList.map(k => ({\r\n          type: 'component',\r\n          componentName: 'gl-wrapper',\r\n          title: openedComponents[k].config.title,\r\n          reorderEnabled: false,\r\n          componentState: {\r\n            originalId: k, // pass in the ID of the original component as parameter.\r\n          },\r\n        })),\r\n        isClosable: false,\r\n        isDummy: true,\r\n        state: 'dummy',\r\n        activeItemIndex: componentIdList.findIndex(j => j === (item || parent._activeContentItem.id)),\r\n      }\r\n      // add this item as first child ever, causing golden-layout to create a stack object\r\n      rootContentItem.addChild(config, 0);\r\n\r\n      // Fetch the stack\r\n      const myStack = rootContentItem.contentItems[0] as GoldenLayout.ContentItem;\r\n      // Setup an __wrapperMaximisedItemId in order to setActiveContentItem on the underlying stack later.\r\n      (this.goldenLayout as any).__wrapperMaximisedItemId = parent._activeContentItem.id;\r\n      (myStack as any).activeContentItem$.subscribe((ci) => {\r\n        // Setup the __wrapperMaximisedItemId lateron.\r\n        (this.goldenLayout as any).__wrapperMaximisedItemId = ci.config.componentState.originalId;\r\n      });\r\n\r\n      const teardown$ = new Subject();\r\n      myStack.on('minimised', () => {\r\n        // Dummy stack was minimised, so enforce all dummy components to be disposed\r\n        // and dispose the dummy stack as well.\r\n        (this.goldenLayout as any).__wrapperMaximisedItemId = null;\r\n        teardown$.next();\r\n        teardown$.complete();\r\n        myStack.remove()\r\n      });\r\n      // Maximise the dummy stack.\r\n      myStack.toggleMaximise();\r\n\r\n      // Whenever a tab is being created or closed, perform a diff algorithm\r\n      // on the active tabs list and create or delete the dummy tabs.\r\n      this.tabsList.pipe(\r\n        takeUntil(teardown$),\r\n        distinctUntilChanged((a, b) => {\r\n          const keysA = Object.keys(a);\r\n          const keysB = new Set(Object.keys(b));\r\n          return keysA.length === keysB.size && keysA.every(key => keysB.has(key));\r\n        }),\r\n      ).subscribe(targetState => {\r\n        const workingCopy = { ...targetState };\r\n        const tabs = new Set(Object.keys(workingCopy));\r\n        // currently opened tabs\r\n        const openedTabs = new Set(myStack.contentItems.map(ci => {\r\n          return (ci.config as any).componentState.originalId;\r\n        }));\r\n        for (const key of tabs) {\r\n          if (openedTabs.has(key)) {\r\n            // item is both currently opened in dummy and background, nothing to do\r\n            openedTabs.delete(key);\r\n          } else {\r\n            // item is not opened in dummy, create a component\r\n            myStack.addChild({\r\n              type: 'component',\r\n              componentName: 'gl-wrapper',\r\n              title: targetState[key].config.title,\r\n              reorderEnabled: false,\r\n              componentState: {\r\n                originalId: key,\r\n              },\r\n            } as any)\r\n          }\r\n        }\r\n        // The remaining tabs are opened in the dummy but not in the background, so close the dummy.\r\n        for (const tab of openedTabs) {\r\n          const tabObj = myStack.contentItems.find(j => (j.config as any).componentState.originalId === tab);\r\n          tabObj.remove();\r\n        }\r\n      });\r\n    };\r\n\r\n    this.goldenLayout.on('popIn', () => {\r\n      this.poppedIn = true;\r\n      this.openedComponents.forEach(c => {\r\n        if (implementsGlOnPopin(c)) {\r\n          c.glOnPopin();\r\n        }\r\n      });\r\n    });\r\n\r\n    // Overwrite the 'getComponent' method to dynamically resolve JS components.\r\n    // We need to do this, because the component map is not flexible enough for us since we can dynamically chainload plugins.\r\n    this.goldenLayout.getComponent = (type) => {\r\n      if (isDevMode()) {\r\n        console.log(`Resolving component ${type}`);\r\n      }\r\n      return this.buildConstructor(type);\r\n    };\r\n    this.goldenLayout.on('stackCreated', (stack) => {\r\n      const customHeaderElement = document.createElement('li');\r\n      customHeaderElement.classList.add('custom-header');\r\n      customHeaderElement.style.display = 'none';\r\n      const ctr = stack.header.controlsContainer[0] as HTMLUListElement;\r\n      let element: ComponentRef<any> = null;\r\n\r\n      ctr.prepend(customHeaderElement);\r\n\r\n      const disposeControl = () => {\r\n        customHeaderElement.style.display = 'none';\r\n        if (element) {\r\n          customHeaderElement.childNodes.forEach(e => customHeaderElement.removeChild(e));\r\n          element.destroy();\r\n          element = null;\r\n          stack.header._updateTabSizes();\r\n        }\r\n      };\r\n      const bootstrapComponent = (ct: Type<any>, tokens: StaticProvider[], injector: Injector) => {\r\n        if (element) {\r\n          disposeControl();\r\n        }\r\n        customHeaderElement.style.display = '';\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ct);\r\n        const headerInjector = Injector.create(tokens, injector);\r\n        element = this.viewContainer.createComponent(factory, undefined, headerInjector);\r\n        customHeaderElement.prepend(element.location.nativeElement);\r\n        stack.header._updateTabSizes();\r\n      };\r\n\r\n      // Wait until the content item is loaded and done\r\n      stack.activeContentItem$.pipe(\r\n        switchMap((contentItem: GoldenLayout.ContentItem) => {\r\n          if (!contentItem || !contentItem.isComponent) {\r\n            return of(null);\r\n          }\r\n          return (contentItem as any).instance || of(null);\r\n        }), switchMap((cr: ComponentRef<any> | null) => {\r\n          if (!cr) {\r\n            return Promise.all([null, null, null]);\r\n          }\r\n          const inst = cr.instance.headerComponent;\r\n          const tokens = cr.instance.additionalTokens;\r\n          return Promise.all([\r\n            Promise.resolve(inst),\r\n            Promise.resolve(tokens),\r\n            Promise.resolve(cr)\r\n          ]);\r\n        })\r\n      ).subscribe(([header, tokens, componentRef]) => {\r\n        // This is the currently visible content item, after it's loaded.\r\n        // Therefore, we can check whether (and what) to render as header component here.\r\n        if (!header || !componentRef) {\r\n          disposeControl();\r\n        } else {\r\n          bootstrapComponent(\r\n            header,\r\n            tokens || [],\r\n            componentRef.injector\r\n          );\r\n        }\r\n      }, disposeControl, disposeControl);\r\n    });\r\n    // Initialize the layout.\r\n    this.goldenLayout.on('initialised', () => {\r\n      window.requestAnimationFrame(() => {\r\n        if (layout.maximisedItemId) {\r\n          const c = GetComponentFromLayoutManager(this.goldenLayout, layout.maximisedItemId);\r\n          if (c) {\r\n            (this.goldenLayout as any).generateAndMaximiseDummyStack(c.parent, layout.maximisedItemId);\r\n          }\r\n        }\r\n      });\r\n    });\r\n    this.goldenLayout.init();\r\n    this.goldenLayout.on('stateChanged', this.pushStateChange);\r\n    this.goldenLayout.on('itemDragged', this.pauseStateChange);\r\n    this.goldenLayout.on('itemDropped', this.resumeStateChange);\r\n    this.goldenLayout.on('tabActivated', this.pushTabActivated);\r\n    this.goldenLayout.on(lm.__lm.utils.EventEmitter.ALL_EVENT, this._eventEmitter.emit, this._eventEmitter);\r\n    this._eventEmitter.emit('initialised');\r\n  }\r\n\r\n  /**\r\n   * Build a 'virtual' constructor which is used to pass the components to goldenLayout\r\n   * @param componentType\r\n   */\r\n  private buildConstructor(componentName: string): ComponentInitCallback {\r\n    // Can't use an ES6 lambda here, since it is not a constructor\r\n    const self = this;\r\n    return function (container: GoldenLayout.Container, componentState: any) {\r\n      const glComponent = container.parent;\r\n      if (glComponent.config.id) {\r\n        glComponent.id = glComponent.config.id as string;\r\n      } else {\r\n        glComponent.id = uuid();\r\n        glComponent.config.id = glComponent.id;\r\n      }\r\n\r\n      const d = new Deferred<any>();\r\n      self.ngZone.run(() => {\r\n        // Wait until the component registry can provide a type for the component\r\n        // TBD: Maybe add a timeout here?\r\n        const componentPromise = self.componentRegistry.waitForComponent(componentName);\r\n        componentPromise.then((componentType) => {\r\n          // We got our component type\r\n          if (isDevMode()) {\r\n            console.log(`Component ${componentName} returned from componentRegistry`);\r\n          }\r\n          // Create an instance of the angular component.\r\n          const factory = self.componentFactoryResolver.resolveComponentFactory(componentType);\r\n          let failedComponent: string = null;\r\n          if (componentType === self.fallbackComponent) {\r\n            // Failed to find the component constructor **AND** we have a fallback component defined,\r\n            // so lookup the failed component's name and inject it into the fallback component.\r\n            failedComponent = (container as any)._config.componentName;\r\n          }\r\n          const injector = self._createComponentInjector(container, componentState, failedComponent);\r\n          const componentRef = self.viewContainer.createComponent(factory, undefined, injector);\r\n\r\n          // Bind the new component to container's client DOM element.\r\n          container.getElement().append($(componentRef.location.nativeElement));\r\n          self._bindEventHooks(container, componentRef.instance);\r\n          (container as any).__ngComponent = componentRef.instance;\r\n          self.openedComponents.push(componentRef.instance);\r\n          let destroyed = false;\r\n          const destroyFn = () => {\r\n            if (!destroyed) {\r\n              destroyed = true;\r\n              self.openedComponents = self.openedComponents.filter(i => i !== componentRef.instance);\r\n              $(componentRef.location.nativeElement).remove();\r\n              componentRef.destroy();\r\n            }\r\n          };\r\n\r\n          // Listen to containerDestroy and window beforeunload, preventing a double-destroy\r\n          container.on('destroy', destroyFn);\r\n          self.onUnloaded.promise.then(destroyFn);\r\n          d.resolve(componentRef);\r\n        });\r\n      });\r\n      return d.promise;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates an injector capable of injecting the GoldenLayout object,\r\n   * component container, and initial component state.\r\n   */\r\n  private _createComponentInjector(\r\n    container: GoldenLayout.Container,\r\n    componentState: any,\r\n    failed: string | null,\r\n  ): Injector {\r\n    const providers = [\r\n      {\r\n        provide: GoldenLayoutContainer,\r\n        useValue: container,\r\n      },\r\n      {\r\n        provide: GoldenLayoutComponentState,\r\n        useValue: componentState,\r\n      },\r\n      {\r\n        provide: GoldenLayoutEventHub,\r\n        useValue: this.goldenLayout.eventHub,\r\n      },\r\n      {\r\n        provide: GoldenLayoutComponentHost,\r\n        useValue: this,\r\n      }\r\n    ];\r\n    if (!!failed) {\r\n      providers.push({\r\n        provide: FailedComponent,\r\n        useValue: failed,\r\n      });\r\n    }\r\n    return Injector.create(providers, this.injector);\r\n  }\r\n\r\n  /**\r\n   * Registers an event handler for each implemented hook.\r\n   * @param container Golden Layout component container.\r\n   * @param component Angular component instance.\r\n   */\r\n  private _bindEventHooks(container: GoldenLayout.Container, component: any): void {\r\n    if (implementsGlOnResize(component)) {\r\n      container.on('resize', () => {\r\n        component.glOnResize();\r\n      });\r\n    }\r\n\r\n    if (implementsGlOnShow(component)) {\r\n      container.on('show', () => {\r\n        component.glOnShow();\r\n      });\r\n    }\r\n\r\n    if (implementsGlOnHide(component)) {\r\n      container.on('hide', () => {\r\n        component.glOnHide();\r\n      });\r\n    }\r\n\r\n    if (implementsGlOnTab(component)) {\r\n      container.on('tab', (tab) => {\r\n        component.glOnTab(tab);\r\n      });\r\n    }\r\n\r\n    if (implementsGlOnClose(component)) {\r\n      const containerClose = container.close.bind(container);\r\n      container.close = () => {\r\n        if (!(container as any)._config.isClosable) {\r\n          return false;\r\n        }\r\n        component.glOnClose().then(() => {\r\n          containerClose();\r\n        }, () => { /* Prevent close, don't care about rejections */ });\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS, Type, Provider } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GoldenLayoutComponent } from './golden-layout.component';\r\nimport { RootWindowService } from './root-window.service';\r\nimport * as config from './config';\r\nimport { ComponentRegistryService } from './component-registry.service';\r\nimport { FallbackComponent } from './fallback';\r\nimport { PluginRegistryService, MockPluginRegistryService } from './plugin-registry.service';\r\nimport { WindowSynchronizerService, MockWindowSynchronizerService } from './window-sync.service';\r\nimport { PluginURLProvider } from './plugin-url.service';\r\nimport { WrapperComponent } from './wrapper.component';\r\n\r\n@NgModule({\r\n  declarations: [GoldenLayoutComponent, WrapperComponent],\r\n  exports: [GoldenLayoutComponent],\r\n  imports: [CommonModule]\r\n})\r\nexport class GoldenLayoutModule {\r\n  public static forRoot(types: config.ComponentType[], fallback?: Type<any>, pluginDeps?: config.PluginDependencyType[]): ModuleWithProviders<GoldenLayoutModule> {\r\n    return {\r\n      ngModule: GoldenLayoutModule,\r\n      providers: [\r\n        ComponentRegistryService,\r\n        RootWindowService,\r\n        PluginRegistryService,\r\n        PluginURLProvider,\r\n        WindowSynchronizerService,\r\n        { provide: config.GoldenLayoutComponents, useValue: types, },\r\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: [types, fallback, WrapperComponent], multi: true },\r\n        { provide: config.GoldenLayoutPluginDependency, useValue: pluginDeps },\r\n        { provide: FallbackComponent, useValue: fallback },\r\n      ],\r\n    };\r\n  }\r\n\r\n  public static forChild(types: config.ComponentType[], fallback?: Type<any>): Provider[] {\r\n    return [\r\n      ComponentRegistryService,\r\n      { provide: PluginRegistryService, useClass: MockPluginRegistryService },\r\n      { provide: WindowSynchronizerService, useClass: MockWindowSynchronizerService },\r\n      { provide: PluginURLProvider, useValue: null },\r\n      { provide: config.GoldenLayoutComponents, useValue: types, },\r\n      { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: [types, fallback, WrapperComponent], multi: true },\r\n      { provide: FallbackComponent, useValue: fallback },\r\n    ];\r\n  }\r\n}\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MockWindowSynchronizerService as ɵa,WindowSynchronizerService as ɵb} from './lib/window-sync.service';\nexport {WrapperComponent as ɵc} from './lib/wrapper.component';"]}