{"version":3,"file":"plugin-registry.service.d.ts","sources":["plugin-registry.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Injector, NgModuleRef } from '@angular/core';\r\nimport { PluginDependencyType } from './config';\r\nimport { Subject } from 'rxjs';\r\nimport { PluginURLProvider } from './plugin-url.service';\r\nexport declare class MockPluginRegistryService {\r\n    pluginLoaded$: Subject<{\r\n        id: string;\r\n        module: NgModuleRef<any>;\r\n    }>;\r\n    pluginUnloaded$: Subject<string>;\r\n    startLoadPlugin(): void;\r\n    startUnloadPlugin(): void;\r\n}\r\n/**\r\n * This class automates the loading of bundles built with ng-packagr,\r\n * registering the components with GoldenLayout\r\n * This service MUST be instantiated once per window and defines the 'public'\r\n * API for loading and unloading plugins.\r\n */\r\nexport declare class PluginRegistryService {\r\n    private urlProvider;\r\n    private injector;\r\n    private availableDependencies;\r\n    private loadedPlugins;\r\n    pluginLoaded$: Subject<{\r\n        id: string;\r\n        module: NgModuleRef<any>;\r\n    }>;\r\n    pluginUnloaded$: Subject<string>;\r\n    constructor(deps: PluginDependencyType[], urlProvider: PluginURLProvider, injector: Injector);\r\n    startLoadPlugin(id: string, url: string): void;\r\n    startUnloadPlugin(id: string): void;\r\n    waitForPlugin(id: string): Promise<any>;\r\n    private patchWindow;\r\n    private load;\r\n    private unload;\r\n}\r\n"]}