{"version":3,"file":"ngx-golden-layout.js","sources":["../../projects/ngx-golden-layout/src/lib/config.ts","../../projects/ngx-golden-layout/src/lib/deferred.ts","../../projects/ngx-golden-layout/src/lib/multiwindow-service.ts","../../projects/ngx-golden-layout/src/lib/plugin-url.service.ts","../../projects/ngx-golden-layout/src/lib/plugin-registry.service.ts","../../projects/ngx-golden-layout/src/lib/tokens.ts","../../projects/ngx-golden-layout/src/lib/type-guards.ts","../../projects/ngx-golden-layout/src/lib/wrapper.component.ts","../../projects/ngx-golden-layout/src/lib/component-registry.service.ts","../../projects/ngx-golden-layout/src/lib/fallback.ts","../../projects/ngx-golden-layout/src/lib/root-window.service.ts","../../projects/ngx-golden-layout/src/lib/window-sync.service.ts","../../projects/ngx-golden-layout/src/lib/golden-layout.component.ts","../../projects/ngx-golden-layout/src/lib/module.ts","../../../projects/ngx-golden-layout/src/ngx-golden-layout.ts"],"sourcesContent":["import { InjectionToken, Type } from '@angular/core';\r\nimport * as GoldenLayout from 'golden-layout';\r\n\r\nexport interface ComponentType {\r\n  /**\r\n   * Optional string indicating that this component type is handled by the plugin\r\n   * specified in this field.\r\n   */\r\n  plugin?: string;\r\n  /**\r\n   * Name used to register compoent with GoldenLayout.\r\n   * Must be unique over all component types\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * Angular component type.\r\n   * Pass the class of the component to instantiate here.\r\n   */\r\n  type: Type<any>;\r\n}\r\n\r\nexport interface PluginDependencyType {\r\n  /**\r\n   * Fully qualified module name of the dependency\r\n   */\r\n  name: string;\r\n  /**\r\n   * Function that loads the dependency\r\n   * Might return an object (direct load) OR a promise (deferred loading using import() syntax)\r\n   */\r\n  loader: any;\r\n}\r\n\r\n/**\r\n * Inject an array of ComponentType into this token to\r\n * register those by default with the ComponentRegistry\r\n */\r\nexport const GoldenLayoutComponents = new InjectionToken<ComponentType[]>('ComponentTypes');\r\n\r\n/**\r\n * Inject dependency modules to be used with the PluginRegistry\r\n * This token can use multi: true\r\n */\r\nexport const GoldenLayoutPluginDependency = new InjectionToken<PluginDependencyType[]>('Dependencies');\r\n\r\nexport interface IExtendedGoldenLayoutConfig extends GoldenLayout.Config {\r\n  settings: GoldenLayout.Config['settings'] & {\r\n    /**\r\n     * Use alternate maximise method that moves *all* tabs to the single root.\r\n     */\r\n    maximiseAllItems?: boolean;\r\n  };\r\n}\r\n\r\nexport interface IExtendedGoldenLayoutContainer extends GoldenLayout.Container {\r\n  /**\r\n   * Unique id for the container\r\n   */\r\n  id: string;\r\n}\r\n","export class Deferred<T> {\r\n  public promise: Promise<T>;\r\n  public resolve: (val: T) => void;\r\n  public reject: (reason: Error | string) => void;\r\n  constructor() {\r\n    this.promise = new Promise<T>((resolve, reject) => {\r\n      this.resolve = resolve;\r\n      this.reject = reject;\r\n    });\r\n  }\r\n}\r\n","export function MultiWindowInit(): void {\r\n  if (!isChildWindow()) {\r\n    if (!(window as any).__services && !(window as any).__serviceConstructors) {\r\n      (window as any).__services = new (window as any).Map();\r\n      (window as any).__serviceConstructors = new (window as any).Map();\r\n\r\n      // Electron compatibility, when we have a global 'require' in our window, we throw it into the new window context\r\n      if ((window as any).require) {\r\n        const originalWindowOpen = window.open.bind(window);\r\n        window.open = (url?: string, target?: string, features?: string, replace?: boolean): Window => {\r\n          const newWindow = originalWindowOpen(url, target, features, replace);\r\n          newWindow.require = (window as any).require;\r\n          return newWindow;\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport type Constructor<T> = {\r\n  new (...args: any[]): T;\r\n}\r\n\r\nexport function isChildWindow(): boolean {\r\n  try {\r\n    return !!window.opener && !!window.opener.location.href;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function MultiWindowService<T>(uniqueName: string) {\r\n  MultiWindowInit();\r\n  return function (constructor: Constructor<T>): Constructor<T> {\r\n    const constr = constructor as any;\r\n    const rootWindow = (isChildWindow() ? window.opener : window) as any;\r\n    const rootWindowIsMyWindow = rootWindow === window;\r\n    if (rootWindowIsMyWindow) {\r\n      const constrGot = rootWindow.__serviceConstructors.get(uniqueName);\r\n      if (constrGot && constrGot !== constr) {\r\n        throw new Error(`MultiWindowService(): uniqueName ${uniqueName} already taken by ${constrGot}, wanted by ${constr}`);\r\n      }\r\n      rootWindow.__serviceConstructors.set(uniqueName, constr);\r\n    }\r\n    const newConstructor = (function(...args: any[]): T {\r\n      const hasInstance = rootWindow.__services.has(uniqueName);\r\n      if (!hasInstance) {\r\n        const storedConstr = rootWindow.__serviceConstructors.get(uniqueName) || constr;\r\n        rootWindow.__services.set(uniqueName, new storedConstr(...args));\r\n      }\r\n      return rootWindow.__services.get(uniqueName);\r\n    }) as any;\r\n    if (rootWindowIsMyWindow) {\r\n      // https://github.com/angular/angular/issues/36120\r\n      // ɵfac is created before this decorator runs.\r\n      // so copy over the static properties.\r\n      for (const prop in constr) {\r\n        if (constr.hasOwnProperty(prop)) {\r\n          newConstructor[prop] = constr[prop];\r\n        }\r\n      }\r\n    }\r\n    try {\r\n      if (rootWindowIsMyWindow) {\r\n        const metadata = (Reflect as any).getMetadata('design:paramtypes', constr);\r\n        (Reflect as any).metadata('design:paramtypes', metadata)(newConstructor);\r\n      }\r\n    } catch {\r\n      // obviously, we're in ivy.\r\n    }\r\n    return newConstructor as Constructor<T>;\r\n  };\r\n}\r\n","import { MultiWindowService } from './multiwindow-service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n\r\nexport interface IPluginURL {\r\n  id: string,\r\n  url: string,\r\n};\r\n\r\n/**\r\n * This class manages plugin load and unload requests across all windows.\r\n * Because we can't have progress reporting about all windows, we also don't\r\n * return any progress/success indicator here.\r\n */\r\n@MultiWindowService<PluginURLProvider>('_gl__PluginURLProvider')\r\n@Injectable()\r\nexport class PluginURLProvider {\r\n  private loadedURLs = new Map<string, string>();\r\n  private loads = new Subject<IPluginURL>();\r\n  private unloads = new Subject<string>();\r\n\r\n  public loadRequests$(): Observable<IPluginURL> {\r\n    return this.loads;\r\n  }\r\n  public unloadRequests$(): Observable<string> {\r\n    return this.unloads;\r\n  }\r\n  public allPlugins(): IPluginURL[] {\r\n    return [...this.loadedURLs.entries()].map(p => ({ id: p[0], url: p[1] }));\r\n  }\r\n\r\n  public requestLoad(id: string, url: string) {\r\n    const p = this.loadedURLs.get(id);\r\n    if (p) {\r\n      if (p !== url) {\r\n        throw new Error(`Plugin ${id} is already loaded with another URL`);\r\n      }\r\n      return;\r\n    }\r\n    this.loadedURLs.set(id, url);\r\n    this.loads.next({ id, url });\r\n  }\r\n\r\n  public requestUnload(id: string) {\r\n    const p = this.loadedURLs.get(id);\r\n    if (!p) {\r\n      throw new Error(`Plugin ${id} is not loaded`);\r\n    }\r\n    this.loadedURLs.delete(id);\r\n    this.unloads.next(id);\r\n  }\r\n}\r\n","import { Injectable, Inject, Optional, Injector, NgModuleRef, ɵNgModuleFactory } from '@angular/core';\r\nimport { GoldenLayoutPluginDependency, PluginDependencyType } from './config';\r\nimport { Deferred } from './deferred';\r\nimport { Subject } from 'rxjs';\r\nimport { PluginURLProvider, IPluginURL } from './plugin-url.service';\r\n\r\ninterface IPluginState {\r\n  id: string,\r\n  url: string,\r\n  module: Deferred<any>,\r\n  moduleRef: NgModuleRef<any>,\r\n  script: HTMLScriptElement,\r\n};\r\n\r\n@Injectable()\r\nexport class MockPluginRegistryService {\r\n  public pluginLoaded$ = new Subject<{ id: string, module: NgModuleRef<any> }>();\r\n  public pluginUnloaded$ = new Subject<string>();\r\n  startLoadPlugin() {\r\n    throw new Error('MockPluginRegistry does not support loading/unloading');\r\n  }\r\n  startUnloadPlugin() {\r\n    throw new Error('MockPluginRegistry does not support loading/unloading');\r\n  }\r\n}\r\n\r\n/**\r\n * This class automates the loading of bundles built with ng-packagr,\r\n * registering the components with GoldenLayout\r\n * This service MUST be instantiated once per window and defines the 'public'\r\n * API for loading and unloading plugins.\r\n */\r\n@Injectable()\r\nexport class PluginRegistryService {\r\n  private availableDependencies = new Map<string, any>();\r\n  private loadedPlugins = new Map<string, IPluginState>();\r\n\r\n  public pluginLoaded$ = new Subject<{ id: string, module: NgModuleRef<any> }>();\r\n  public pluginUnloaded$ = new Subject<string>();\r\n\r\n  constructor(\r\n    @Inject(GoldenLayoutPluginDependency) @Optional() deps: PluginDependencyType[] = [],\r\n    private urlProvider: PluginURLProvider,\r\n    private injector: Injector,\r\n  ) {\r\n    console.log('Creating PluginRegistry, got', deps.length, 'additional dependency modules');\r\n    deps.forEach(x => this.availableDependencies.set(x.name, x.loader));\r\n\r\n    this.patchWindow();\r\n\r\n    this.urlProvider.loadRequests$().subscribe(p => this.load(p));\r\n    // Load all previously loaded plugins\r\n    this.urlProvider.allPlugins().forEach(p => this.load(p));\r\n  }\r\n\r\n  startLoadPlugin(id: string, url: string) {\r\n    this.urlProvider.requestLoad(id, url);\r\n  }\r\n  startUnloadPlugin(id: string) {\r\n    this.urlProvider.requestUnload(id);\r\n  }\r\n\r\n  waitForPlugin(id: string): Promise<any> {\r\n    const p = this.loadedPlugins.get(id);\r\n    if (p) {\r\n      return p.module.promise;\r\n    }\r\n\r\n    const newPlugin: IPluginState = {\r\n      id: id,\r\n      module: new Deferred<any>(),\r\n      url: null,\r\n      script: null,\r\n      moduleRef: null,\r\n    };\r\n    this.loadedPlugins.set(id, newPlugin);\r\n    return newPlugin.module.promise;\r\n  }\r\n\r\n  private patchWindow() {\r\n    (window as any).define = (moduleId: string, deps: string[], factory: (exports: any, ...deps: any[]) => void) => {\r\n      const x = this.loadedPlugins.get(moduleId);\r\n      if (!x) {\r\n        console.warn('Unknown plugin called define():', moduleId);\r\n        return;\r\n      }\r\n\r\n      // first param is exports\r\n      deps = deps.slice(1);\r\n\r\n      const depsExports = deps.map(d => {\r\n        const p = this.availableDependencies.get(d);\r\n        if (!p) {\r\n          console.warn('Plugin', moduleId, 'requested unknown dependency', d);\r\n          return Promise.resolve(undefined);\r\n        }\r\n        const promisifiedP = Promise.resolve(p);\r\n        return promisifiedP.catch(err => {\r\n          console.warn('Plugin', moduleId, 'dependency', d, 'but load failed', err);\r\n          return undefined;\r\n        });\r\n      });\r\n      Promise.all(depsExports).then(deps => {\r\n        const exports: any = {};\r\n        factory(exports, ...deps);\r\n        console.log('Plugin', moduleId, 'loaded.');\r\n        const moduleKlass = exports.MODULE;\r\n        if (!moduleKlass) {\r\n          return Promise.reject(\"No MODULE export found\");\r\n        }\r\n        const moduleFactory = new ɵNgModuleFactory(moduleKlass);\r\n        x.moduleRef = moduleFactory.create(this.injector);\r\n        x.module.resolve(exports as any);\r\n        this.pluginLoaded$.next({ id: x.id, module: x.moduleRef });\r\n      }).catch(err => {\r\n        console.warn('Failed to load plugin', moduleId, 'error', err);\r\n        x.module.reject(err);\r\n      });\r\n    };\r\n    (window as any).define.amd = true;\r\n    console.log('Window AMD shim established.');\r\n  }\r\n\r\n  private load({ id, url }: IPluginURL) {\r\n    let p = this.loadedPlugins.get(id);\r\n\r\n    // plugin is already loaded or in progress.\r\n    if (p && p.url) {\r\n      if (p.url !== url) {\r\n        throw new Error(\"Plugin is already loaded with another URL\");\r\n      }\r\n      return;\r\n    }\r\n\r\n    // !p means that p is not acitvely being waited on, so create it.\r\n    // if p is defined here it means that component construction actively\r\n    // waits on the loading of this plugin, so we don't need to recreate\r\n    // the structure here.\r\n    if (!p) {\r\n      p = {\r\n        id: id,\r\n        module: new Deferred<any>(),\r\n        url: null,\r\n        moduleRef: null,\r\n        script: null,\r\n      };\r\n    }\r\n\r\n    // Start the actual loading process\r\n    p.url = url;\r\n    this.loadedPlugins.set(id, p);\r\n\r\n    const script = document.createElement('script');\r\n    script.onerror = (e) => p.module.reject(e as any);\r\n    script.type = 'text/javascript';\r\n    script.src = url;\r\n    p.script = script;\r\n\r\n    document.body.appendChild(script);\r\n  }\r\n\r\n  private unload(id: string) {\r\n    // TBD\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const GoldenLayoutContainer = new InjectionToken('GoldenLayoutContainer');\r\nexport const GoldenLayoutComponentState = new InjectionToken('GoldenLayoutComponentState');\r\nexport const GoldenLayoutEventHub = new InjectionToken('GoldenLayoutEventHub');\r\nexport const GoldenLayoutComponentHost = new InjectionToken('GoldenLayoutComponentHost');\r\n","import { GlOnResize, GlOnShow, GlOnHide, GlOnTab, GlOnClose, GlOnPopin, GlOnUnload, GlOnPopout, GlHeaderItem } from \"./hooks\";\r\n\r\n/**\r\n * Type guard which determines if a component implements the GlOnResize interface.\r\n */\r\nexport function implementsGlOnResize(obj: any): obj is GlOnResize {\r\n  return typeof obj === 'object' && typeof obj.glOnResize === 'function';\r\n}\r\n\r\n/**\r\n * Type guard which determines if a component implements the GlOnShow interface.\r\n */\r\nexport function implementsGlOnShow(obj: any): obj is GlOnShow {\r\n  return typeof obj === 'object' && typeof obj.glOnShow === 'function';\r\n}\r\n\r\n/**\r\n * Type guard which determines if a component implements the GlOnHide interface.\r\n */\r\nexport function implementsGlOnHide(obj: any): obj is GlOnHide {\r\n  return typeof obj === 'object' && typeof obj.glOnHide === 'function';\r\n}\r\n\r\n/**\r\n * Type guard which determines if a component implements the GlOnTab interface.\r\n */\r\nexport function implementsGlOnTab(obj: any): obj is GlOnTab {\r\n  return typeof obj === 'object' && typeof obj.glOnTab === 'function';\r\n}\r\n\r\n/**\r\n * Type guard which determines if a component implements the GlOnClose interface.\r\n */\r\nexport function implementsGlOnClose(obj: any): obj is GlOnClose {\r\n  return typeof obj === 'object' && typeof obj.glOnClose === 'function';\r\n}\r\n\r\nexport function implementsGlOnPopin(obj: any): obj is GlOnPopin {\r\n  return typeof obj === 'object' && typeof obj.glOnPopin === 'function';\r\n}\r\nexport function implementsGlOnUnload(obj: any): obj is GlOnUnload {\r\n  return typeof obj === 'object' && typeof obj.glOnUnload === 'function';\r\n}\r\nexport function implementsGlOnPopout(obj: any): obj is GlOnPopout {\r\n  return typeof obj === 'object' && typeof obj.glOnPopout === 'function';\r\n}\r\nexport function implementsGlHeaderItem(obj: any): obj is GlHeaderItem {\r\n  return typeof obj === 'object' && typeof obj.headerComponent === 'function';\r\n}\r\n\r\nexport const uuid = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n","import { Component, ViewEncapsulation, Inject, OnInit, ComponentRef, OnDestroy } from '@angular/core';\r\nimport { GlHeaderItem, GlOnHide, GlOnShow, GlOnResize, GlOnTab } from './hooks';\r\nimport { GoldenLayoutComponentHost, GoldenLayoutComponentState, GoldenLayoutContainer } from './tokens';\r\nimport { implementsGlOnResize, implementsGlOnHide, implementsGlOnShow, implementsGlOnTab } from './type-guards';\r\n\r\n@Component({\r\n  selector: 'gl-wrapper',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `<div class=\"wrapper\"></div>`\r\n})\r\nexport class WrapperComponent implements\r\n  GlHeaderItem,\r\n  OnInit,\r\n  OnDestroy,\r\n  GlOnHide,\r\n  GlOnShow,\r\n  GlOnResize,\r\n  GlOnTab\r\n {\r\n  get headerComponent() {\r\n    if (!this.originalComponent || !this.originalComponent.instance) {\r\n      return undefined;\r\n    }\r\n    return this.originalComponent.instance.then(x => x.instance.headerComponent);\r\n  }\r\n  get additionalTokens() {\r\n    if (!this.originalComponent || !this.originalComponent.instance) {\r\n      return undefined;\r\n    }\r\n    return this.originalComponent.instance.then(x => x.instance.additionalTokens);\r\n  }\r\n\r\n  private originalComponent: any;\r\n  private destroyed = false;\r\n  private initialized = false;\r\n\r\n  constructor(\r\n    @Inject(GoldenLayoutComponentHost) private host: any,\r\n    @Inject(GoldenLayoutContainer) private container: any,\r\n    @Inject(GoldenLayoutComponentState) private state: any,\r\n  ) {\r\n    this.originalComponent = (this.host.getGoldenLayoutInstance() as any)._getAllComponents()[this.state.originalId];\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.originalComponent.instance.then((componentRef: ComponentRef<any>) => {\r\n      if (this.destroyed || this.initialized) {\r\n        return;\r\n      }\r\n      this.redock(componentRef, this.container.getElement());\r\n      this.initialized = true;\r\n    })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.originalComponent.instance.then((cr: ComponentRef<any>) => {\r\n      if (!this.initialized || this.destroyed) {\r\n        return;\r\n      }\r\n      this.redock(cr, this.originalComponent.container.getElement());\r\n      this.destroyed = true;\r\n    })\r\n  }\r\n\r\n  private redock(componentRef: ComponentRef<any>, to: JQuery) {\r\n    const el = $(componentRef.location.nativeElement);\r\n    el.remove();\r\n    to.append(el);\r\n    if (implementsGlOnResize(componentRef.instance)) {\r\n      componentRef.instance.glOnResize();\r\n    }\r\n  }\r\n\r\n  glOnHide() {\r\n    this.originalComponent.instance.then((cr: ComponentRef<any>) => {\r\n      if (implementsGlOnHide(cr.instance)) {\r\n        cr.instance.glOnHide();\r\n      }\r\n    });\r\n  }\r\n  glOnShow() {\r\n    this.originalComponent.instance.then((cr: ComponentRef<any>) => {\r\n      if (implementsGlOnShow(cr.instance)) {\r\n        cr.instance.glOnShow();\r\n      }\r\n    });\r\n  }\r\n  glOnResize() {\r\n    this.originalComponent.instance.then((cr: ComponentRef<any>) => {\r\n      if (implementsGlOnResize(cr.instance)) {\r\n        cr.instance.glOnResize();\r\n      }\r\n    });\r\n  }\r\n  glOnTab(tab: any) {\r\n    this.originalComponent.instance.then((cr: ComponentRef<any>) => {\r\n      if (implementsGlOnTab(cr.instance)) {\r\n        debugger;\r\n        cr.instance.glOnTab(this.originalComponent.tab);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Inject, Injectable, Optional, Type } from '@angular/core';\r\nimport { ComponentType, GoldenLayoutComponents } from './config';\r\nimport { PluginRegistryService } from './plugin-registry.service';\r\nimport { Deferred } from './deferred';\r\nimport { WrapperComponent } from './wrapper.component';\r\n\r\n@Injectable()\r\nexport class ComponentRegistryService {\r\n  private components = new Map<string, Type<any>>();\r\n  private awaitedComponents = new Map<string, Deferred<Type<any>>>();\r\n\r\n  constructor(\r\n    @Inject(GoldenLayoutComponents) @Optional() initialComponents?: ComponentType[],\r\n    @Optional() private pluginRegistry?: PluginRegistryService,\r\n  ) {\r\n    (initialComponents || []).forEach(c => this.registerComponent(c));\r\n    this.registerComponent({\r\n      name: 'gl-wrapper',\r\n      type: WrapperComponent,\r\n    });\r\n\r\n    this.pluginRegistry?.pluginLoaded$.subscribe(({ id, module }) => {\r\n      const registeredTokens = module.injector.get(GoldenLayoutComponents, []);\r\n      console.log('Plugin', id, 'wants to register', registeredTokens.length, 'components');\r\n      registeredTokens.forEach(c => this.registerComponent({ ...c, plugin: id }));\r\n    });\r\n  }\r\n\r\n  public registeredComponents(): ComponentType[] {\r\n    return [...this.components.entries()].map((e): ComponentType => ({ name: e[0], type: e[1] }));\r\n  }\r\n\r\n  // This is only for use by the GoldenLayoutComponent\r\n  public componentMap(): Map<string, Type<any>> {\r\n      return this.components;\r\n  }\r\n\r\n  public registerComponent(component: ComponentType) {\r\n    const otherComponent = this.components.get(component.name);\r\n    if (!!otherComponent && otherComponent !== component.type) {\r\n      const err = new Error(`Failed to register component, ${component.name} is already taken by another component: ${otherComponent}`);\r\n      throw err;\r\n    }\r\n    this.components.set(component.name, component.type);\r\n    const d = this.awaitedComponents.get(component.name);\r\n    if (d) {\r\n      this.awaitedComponents.delete(component.name);\r\n      d.resolve(component.type);\r\n    }\r\n  }\r\n\r\n  public waitForComponent(component: string): Promise<Type<any>> {\r\n    const c = this.components.get(component);\r\n    if (c) {\r\n      return Promise.resolve(c);\r\n    }\r\n\r\n    let d = this.awaitedComponents.get(component);\r\n    if (!d) {\r\n      d = new Deferred<Type<any>>();\r\n      this.awaitedComponents.set(component, d);\r\n    }\r\n    return d.promise;\r\n  }\r\n}\r\n","import { InjectionToken, Type } from '@angular/core';\r\n\r\n/**\r\n * Inject an angular component using this token to indicate\r\n * that the component should be rendered when there is an error rendering\r\n * the actual component.\r\n * Errors could be exceptions thrown at construction time or a not-registered component.\r\n */\r\nexport const FallbackComponent = new InjectionToken<Type<any>>(\"fallback component\");\r\n\r\n/**\r\n * This token is injected into the FallbackComponent when it is instantiated and contains\r\n * the name of the component that failed to initialize.\r\n */\r\nexport const FailedComponent = new InjectionToken<string>(\"failed component\");\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class RootWindowService {\r\n\r\n  constructor() {}\r\n\r\n  public isChildWindow(): boolean {\r\n    try {\r\n      return !!window.opener && !!window.opener.location.href;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getRootWindow(): Window & typeof globalThis {\r\n    return this.isChildWindow() ? window.opener : window;\r\n  }\r\n}\r\n","import { Injectable, ApplicationRef, Injector } from '@angular/core';\r\nimport { RootWindowService } from './root-window.service';\r\n\r\n@Injectable()\r\nexport class MockWindowSynchronizerService {\r\n  restoreAppRefTick() {}\r\n  onUnload() {}\r\n}\r\n\r\n@Injectable()\r\nexport class WindowSynchronizerService {\r\n  private topWindow: Window & typeof globalThis;\r\n  private isChildWindow: boolean;\r\n  private unloaded = false;\r\n\r\n  constructor(\r\n    private appref: ApplicationRef,\r\n    private rootService: RootWindowService,\r\n    private injector: Injector,\r\n  ) {\r\n    this.topWindow = this.rootService.getRootWindow();\r\n    this.isChildWindow = this.rootService.isChildWindow();\r\n\r\n    if (this.isChildWindow) {\r\n      window.document.title = window.document.URL;\r\n      (console as any).__log = console.log;\r\n      console.log = (...args: any[]) => this.topWindow.console.log('[CHILD] =>', ...args);\r\n    }\r\n\r\n    // Multi-Window compatibility.\r\n    // We need to synchronize all appRefs that could tick\r\n    // Store them in a global array and also overwrite the injector using the injector from the main window.\r\n    let anyWin = this.topWindow as any;\r\n    if (!this.isChildWindow) {\r\n      anyWin.__apprefs = [];\r\n      anyWin.__injector = this.injector;\r\n    }\r\n\r\n    // attach the application reference to the root window, save the original 'tick' method\r\n    anyWin.__apprefs.push(this.appref);\r\n    (this.appref as any).__tick = this.appref.tick;\r\n\r\n    // Overwrite the tick method running all apprefs in their zones.\r\n    this.appref.tick = (): void => {\r\n      for (const ar of (this.topWindow as any).__apprefs) {\r\n        ar._zone.run(() => ar.__tick());\r\n      }\r\n    };\r\n  }\r\n\r\n  public restoreAppRefTick() {\r\n    this.appref.tick = (this.appref as any).__tick;\r\n  }\r\n\r\n  public onUnload() {\r\n    if (this.unloaded) {\r\n      return;\r\n    }\r\n    this.unloaded = true;\r\n    if (this.isChildWindow) {\r\n      const index = (this.topWindow as any).__apprefs.indexOf(this.appref);\r\n      if (index >= 0) {\r\n        (this.topWindow as any).__apprefs.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  isDevMode,\r\n  ComponentFactoryResolver,\r\n  HostListener,\r\n  ViewContainerRef,\r\n  ElementRef,\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ApplicationRef,\r\n  Optional,\r\n  Inject,\r\n  NgZone,\r\n  Injector,\r\n  ViewChild,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  StaticProvider,\r\n  Type,\r\n  ComponentRef,\r\n  SkipSelf,\r\n} from '@angular/core';\r\nimport * as GoldenLayout from 'golden-layout';\r\nimport { ComponentRegistryService } from './component-registry.service';\r\nimport { FallbackComponent, FailedComponent } from './fallback';\r\nimport { RootWindowService } from './root-window.service';\r\nimport { Observable, Subscription, BehaviorSubject, of, Subject } from 'rxjs';\r\nimport { switchMap, takeUntil, distinctUntilChanged } from 'rxjs/operators';\r\nimport {\r\n  implementsGlOnResize,\r\n  implementsGlOnShow,\r\n  implementsGlOnHide,\r\n  implementsGlOnTab,\r\n  implementsGlOnClose,\r\n  implementsGlOnPopin,\r\n  implementsGlOnUnload,\r\n  implementsGlOnPopout,\r\n  uuid,\r\n} from './type-guards';\r\nimport { Deferred } from './deferred';\r\nimport { WindowSynchronizerService } from './window-sync.service';\r\nimport {\r\n  GoldenLayoutContainer,\r\n  GoldenLayoutComponentState,\r\n  GoldenLayoutEventHub,\r\n  GoldenLayoutComponentHost\r\n} from './tokens';\r\nimport { IExtendedGoldenLayoutConfig } from './config';\r\n\r\ninterface ComponentInitCallback extends Function {\r\n  (container: GoldenLayout.Container, componentState: any): void;\r\n}\r\n\r\n// We need to wrap some golden layout internals, so we can intercept close and 'close stack'\r\n// For close, the tab is wrapped and the close element to change the event handler to close the correct container.\r\nconst lm = GoldenLayout as any;\r\nconst isCloned = (contentItem: GoldenLayout.ContentItem) => contentItem.isComponent &&\r\ncontentItem.config &&\r\n(contentItem.config as GoldenLayout.ComponentConfig).componentState &&\r\n(contentItem.config as GoldenLayout.ComponentConfig).componentState.originalId;\r\n\r\nexport const GetComponentFromLayoutManager = (lm: GoldenLayout, id: string): GoldenLayout.ContentItem => {\r\n  const itemList = lm.root.getItemsById(id);\r\n  if (itemList.length !== 1) {\r\n    console.warn('non unique ID found: ' + id);\r\n    return undefined;\r\n  }\r\n  return itemList[0];\r\n};\r\nconst originalComponent = (contentItem: GoldenLayout.ContentItem): any => {\r\n  const comp = GetComponentFromLayoutManager(\r\n    contentItem.layoutManager,\r\n    (contentItem.config as GoldenLayout.ComponentConfig).componentState.originalId,\r\n  );\r\n  if (!comp.isComponent) {\r\n    throw new Error('Expected component');\r\n  }\r\n  return comp;\r\n};\r\nconst tabFromId = (contentItem: GoldenLayout.ContentItem) => {\r\n  const ci = originalComponent(contentItem);\r\n  return ci ? ci.tab : undefined;\r\n};\r\n// This code wraps the original golden-layout Tab\r\n// A tab is instantiated by the golden-layout Header\r\n// We rebind the close event listener to properly dispose the angular item container\r\n// In order to destroy the angular component ref and be able to defer the close.\r\nconst originalTab = lm.__lm.controls.Tab;\r\nconst newTab = function(header, tabContentItem) {\r\n  const tab = new originalTab(header, tabContentItem);\r\n\r\n  /**\r\n   * This piece of code implements close functionality for the tab close.\r\n   * If we have a cloned tab, i.e. one which is contained in a maximised dummy stack\r\n   * we close the container backing the tab.\r\n   */\r\n  tab.closeElement.off('click touchstart');\r\n  tab.closeElement.on('click touchstart', (ev) => {\r\n    ev.stopPropagation();\r\n    if (isCloned(tab.contentItem)) {\r\n      const c = originalComponent(tab.contentItem);\r\n      if (c && c.isComponent) {\r\n        // If we have a dummy tab, close the actual tab behind it.\r\n        c.container.close();\r\n      }\r\n    } else {\r\n      // Otherwise close our own tab.\r\n      tab.contentItem.container.close();\r\n    }\r\n  });\r\n\r\n  /**\r\n   * This script emits a tabActivated event for the correct content item\r\n   * when running in a maximised dummy stack.\r\n   */\r\n  tab.element.on('mousedown touchstart', ev => {\r\n    let contentItem = tab.contentItem;\r\n    if (isCloned(contentItem)) {\r\n      contentItem = originalComponent(tab.contentItem);\r\n    }\r\n    contentItem.layoutManager.emit('tabActivated', contentItem);\r\n  });\r\n\r\n  if (isCloned(tab.contentItem) && tab._layoutManager.config.settings.reorderEnabled === true) {\r\n    // Reimplement tab drag start by redirecting the tab state.\r\n    tab.element.on('mousedown touchstart', (ev) => {\r\n      const originalTab = tabFromId(tab.contentItem);\r\n      if (originalTab && originalTab._dragListener) {\r\n        const dl = originalTab._dragListener;\r\n        const destroyDummy = () => {\r\n          dl.off('dragStart', destroyDummy, dl);\r\n          if (header.layoutManager._maximisedItem === tab.contentItem.parent) {\r\n            tab.contentItem.parent.toggleMaximise();\r\n          }\r\n        };\r\n        dl.off('dragStart', originalTab._onDragStart, originalTab);\r\n        dl.on('dragStart', destroyDummy, dl);\r\n        dl.on('dragStart', originalTab._onDragStart, originalTab);\r\n        dl._fDown(ev);\r\n      }\r\n    });\r\n  }\r\n  return tab;\r\n};\r\nnewTab._template = '<li class=\"lm_tab\"><i class=\"lm_left\"></i>' +\r\n'<span class=\"lm_title\"></span><div class=\"lm_close_tab\"></div>' +\r\n'<i class=\"lm_right\"></i></li>';\r\nlm.__lm.controls.Tab = newTab;\r\n\r\n\r\n// Header is wrapped to catch the maximise and close buttons.\r\nconst originalHeader = lm.__lm.controls.Header;\r\nconst newHeader = function(layoutManager, parent) {\r\n  const maximise = parent._header['maximise'];\r\n  const popout = parent._header['popout'];\r\n  if (maximise && layoutManager.config.settings.maximiseAllItems === true) {\r\n    // Check whether we should maximise all stacks and if so, force the header to\r\n    // not generate a maximise button.\r\n    delete parent._header['maximise'];\r\n  }\r\n  if (popout && layoutManager.config.settings.maximiseAllItems === true) {\r\n    delete parent._header['popout'];\r\n  }\r\n\r\n  // Generate the original header\r\n  const header = new originalHeader(layoutManager, parent);\r\n\r\n  // Check whether we should maximise all stacks, and if so, generate a custom popout button\r\n  // but keep the order with the maximise and close button\r\n  if (popout && layoutManager.config.settings.maximiseAllItems === true) {\r\n    header.popoutButton = new lm.__lm.controls.HeaderButton(header, popout, 'lm_popout', () => {\r\n      let contentItem = header.activeContentItem;\r\n      if (isCloned(contentItem)) {\r\n        // We are within the dummy stack, our component is a wrapper component\r\n        // and has a reference to the original (= wrapped) component.\r\n        // Therefore, popping out the whole stack would be stupid, because it wouldn't leave\r\n        // any item in this window.\r\n        contentItem = originalComponent(contentItem);\r\n        contentItem.popout();\r\n      } else if (layoutManager.config.settings.popoutWholeStack === true) {\r\n        // We have a regular stack, so honor the popoutWholeStack setting.\r\n        header.parent.popout();\r\n      } else {\r\n        contentItem.popout();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Check whether we should maximise all stacks, and if so, generate a custom maximise button\r\n  // but keep the order with the close button.\r\n  if (maximise && layoutManager.config.settings.maximiseAllItems === true) {\r\n    header.maximiseButton = new lm.__lm.controls.HeaderButton(header, maximise, 'lm_maximise', () => {\r\n      // The maximise button was clicked, so create a dummy stack, containing a wrapper component for each opened component.\r\n      if (layoutManager._maximisedItem === parent) {\r\n        parent.toggleMaximise();\r\n      } else {\r\n        layoutManager.generateAndMaximiseDummyStack(parent);\r\n      }\r\n    });\r\n  }\r\n  if (header.closeButton) {\r\n    header.closeButton._$destroy();\r\n    const label = header._getHeaderSetting('close');\r\n    header.closeButton = new lm.__lm.controls.HeaderButton(header, label, 'lm_close', () => {\r\n      header.parent.contentItems.forEach(ci => {\r\n        ci.container.close();\r\n      });\r\n    });\r\n  }\r\n  return header;\r\n};\r\nnewHeader._template = [\r\n\t'<div class=\"lm_header\">',\r\n\t'<ul class=\"lm_tabs\"></ul>',\r\n\t'<ul class=\"lm_controls\"></ul>',\r\n\t'<ul class=\"lm_tabdropdown_list\"></ul>',\r\n\t'</div>'\r\n].join( '' );\r\nlm.__lm.controls.Header = newHeader;\r\n\r\n\r\n// Patch the drag proxy in order to have an itemDragged event.\r\nconst origDragProxy = lm.__lm.controls.DragProxy;\r\nconst dragProxy = function(x, y, dragListener, layoutManager, contentItem, originalParent) {\r\n  layoutManager.emit('itemDragged', contentItem);\r\n  return new origDragProxy(x, y, dragListener, layoutManager, contentItem, originalParent);\r\n}\r\ndragProxy._template = origDragProxy._template;\r\nlm.__lm.controls.DragProxy = dragProxy;\r\n\r\n// Patch the stack in order to have an activeContentItemChanged$ observable\r\nconst origStack = lm.__lm.items.Stack;\r\nfunction MyStack(lm, config, parent) {\r\n  origStack.call(this, lm, config, parent);\r\n  this.activeContentItem$ = new BehaviorSubject<any>(null);\r\n  const callback = (ci) => {\r\n    if (this.activeContentItem$) {\r\n      this.activeContentItem$.next(ci)\r\n    };\r\n  };\r\n  this.on('activeContentItemChanged', callback);\r\n  const origDestroy = this._$destroy;\r\n  this.___destroyed = false;\r\n  this._$destroy = () => {\r\n    if (this.___destroyed) {\r\n      return;\r\n    }\r\n    this.___destroyed = true;\r\n    this.off('activeContentItemChanged', callback);\r\n    this.activeContentItem$.complete();\r\n    this.activeContentItem$ = null;\r\n    origDestroy.call(this);\r\n  };\r\n  return this;\r\n}\r\nMyStack.prototype = Object.create(origStack.prototype);\r\n\r\n// Force stacks to be flattened.\r\nMyStack.prototype['addChild'] = function(contentItem: GoldenLayout.ItemConfig, index: number) {\r\n  if (contentItem.type === 'stack') {\r\n    // We try to pop in a stack into another stack (i.e. nested tab controls.)\r\n    // This breaks the other stuff in custom header components, therefore it's not recommended.\r\n    // So we add the items directly into this stack.\r\n    (contentItem.content || []).forEach((ci, idx) => origStack.prototype.addChild.call(this, ci, index + idx));\r\n    if (contentItem.content.length) {\r\n      this.setActiveContentItem(this.contentItems[index + (contentItem as any).activeItemIndex]);\r\n    }\r\n  } else {\r\n    origStack.prototype.addChild.call(this, contentItem, index);\r\n  }\r\n};\r\nMyStack.prototype['setSize'] = function() {\r\n  if (this.layoutManager._maximisedItem === this && this.layoutManager.config.settings.maximiseAllItems === true) {\r\n    // Actually enforce that this item will be the correct size\r\n    this.element.width(this.layoutManager.container.width());\r\n    this.element.height(this.layoutManager.container.height());\r\n  }\r\n  origStack.prototype.setSize.call(this);\r\n};\r\nlm.__lm.items.Stack = MyStack;\r\n\r\nconst origPopout = lm.__lm.controls.BrowserPopout;\r\nconst popout = function(config: GoldenLayout.ItemConfig[], dimensions, parent, index, lm) {\r\n  if (config.length !== 1) {\r\n    console.warn('This should not happen, permitting', config);\r\n  } else {\r\n    if (config[0].type === 'component') {\r\n      config = [{\r\n        type: 'stack',\r\n        title: config[0].title, // Required for adjustToWindowMode to work. (Line 1282 in 1.5.9)\r\n        content: [config[0]],\r\n      }];\r\n    }\r\n  }\r\n  return new origPopout(config, dimensions, parent, index, lm);\r\n};\r\nlm.__lm.controls.BrowserPopout = popout;\r\n\r\n\r\n// Fixup for nested golden-layout instances.\r\n// nested instances should be able to be docked out completely\r\n// but the golden layout will recognize its query string and be incorrectly nested.\r\nconst getQueryStringParam = lm.__lm.utils.getQueryStringParam;\r\nlet firstQueryString = true;\r\nlm.__lm.utils.getQueryStringParam = (param: string) => {\r\n  if (firstQueryString) {\r\n    firstQueryString = false;\r\n    return getQueryStringParam(param);\r\n  }\r\n  return null;\r\n}\r\n@Component({\r\n  selector: 'golden-layout-root',\r\n  styles: [`\r\n    .ng-golden-layout-root {\r\n      width:100%;\r\n      height:100%;\r\n    }`\r\n  ],\r\n  template: `<div class=\"ng-golden-layout-root\" #glroot></div>`\r\n})\r\nexport class GoldenLayoutComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() layout: Observable<IExtendedGoldenLayoutConfig>;\r\n  @Output() stateChanged = new EventEmitter<never>();\r\n  @Output() tabActivated = new EventEmitter<GoldenLayout.ContentItem>();\r\n\r\n  @ViewChild('glroot', { static: true }) private el: ElementRef;\r\n\r\n  private goldenLayout: GoldenLayout = null;\r\n  private onUnloaded = new Deferred<void>();\r\n  private stateChangePaused = false;\r\n  private stateChangeScheduled = false;\r\n  private tabsList = new BehaviorSubject<{ [tabId: string]: GoldenLayout.ContentItem }>({});\r\n  pushStateChange = () => {\r\n    // For each state change, we want to refresh the list of the opened components. At the moment, we only care about the keys.\r\n    this.tabsList.next((this.goldenLayout as any)._getAllComponents());\r\n    if (this.stateChangePaused || this.stateChangeScheduled) {\r\n      return;\r\n    }\r\n    this.stateChangeScheduled = true;\r\n    window.requestAnimationFrame(() => {\r\n      this.stateChangeScheduled = false;\r\n      this.stateChanged.emit()\r\n    });\r\n  };\r\n\r\n  resumeStateChange = () => this.stateChangePaused = false;\r\n  pauseStateChange = () => this.stateChangePaused = true;\r\n  pushTabActivated = (ci: GoldenLayout.ContentItem) => {\r\n    this.tabActivated.emit(ci);\r\n  }\r\n\r\n  private fallbackType: ComponentInitCallback = null;\r\n  private layoutSubscription: Subscription;\r\n  private openedComponents = [];\r\n  private poppedIn = false;\r\n  private _eventEmitter = new lm.__lm.utils.EventEmitter();\r\n\r\n  @HostListener('window:resize')\r\n  public onResize(): void {\r\n    if (this.goldenLayout) {\r\n      this.goldenLayout.updateSize();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private rootService: RootWindowService,\r\n    private componentRegistry: ComponentRegistryService,\r\n    private viewContainer: ViewContainerRef,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private ngZone: NgZone,\r\n    private readonly injector: Injector,\r\n    private windowSync: WindowSynchronizerService,\r\n    @Optional() @SkipSelf() private parentGoldenLayout: GoldenLayoutComponent,\r\n    @Optional() @Inject(FallbackComponent) private readonly fallbackComponent: any\r\n  ) {\r\n    console.log(parentGoldenLayout);\r\n    if (!!this.fallbackComponent) {\r\n      this.fallbackType = this.buildConstructor(this.fallbackComponent);\r\n    }\r\n\r\n    if (isDevMode()) console.log(`Create@${this.rootService.isChildWindow ? 'child' : 'root'}!`);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (isDevMode()) console.log(`Init@${this.rootService.isChildWindow ? 'child' : 'root'}!`);\r\n\r\n    this.layoutSubscription = this.layout.subscribe(layout => {\r\n      this.destroyGoldenLayout();\r\n      this.initializeGoldenLayout(layout);\r\n    });\r\n  }\r\n  // Map beforeunload to onDestroy to simplify the handling\r\n  @HostListener('window:beforeunload')\r\n  public beforeUnload() {\r\n    if (this.poppedIn) {\r\n      this.onUnloaded.promise.then(() => this.ngOnDestroy());\r\n      this.onUnloaded.resolve();\r\n      this.windowSync.onUnload();\r\n    }\r\n  }\r\n\r\n  // Map beforeunload to onDestroy to simplify the handling\r\n  @HostListener('window:pagehide')\r\n  public pageHide() {\r\n    if (!this.poppedIn) {\r\n      this.openedComponents.forEach(c => {\r\n        if (implementsGlOnUnload(c)) {\r\n          c.glOnUnload();\r\n        }\r\n      });\r\n    }\r\n    this.onUnloaded.promise.then(() => this.ngOnDestroy());\r\n    this.onUnloaded.resolve();\r\n    this.windowSync.onUnload();\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (isDevMode()) {\r\n      console.log(`Destroy@${this.rootService.isChildWindow ? 'child' : 'root'}!`);\r\n    }\r\n    this.layoutSubscription.unsubscribe();\r\n\r\n    // restore the original tick method.\r\n    // this appens in two cases:\r\n    // either the window is closed, after that it's not important to restore the tick method\r\n    // or within the root window, where we HAVE to restore the original tick method\r\n    this.windowSync.restoreAppRefTick();\r\n    this.destroyGoldenLayout();\r\n    // Discard all previously made subscriptions.\r\n    this._eventEmitter._mSubscriptions = { [lm.__lm.utils.EventEmitter.ALL_EVENT]: [] };\r\n  }\r\n\r\n  public getGoldenLayoutInstance(): GoldenLayout {\r\n    if (!this.goldenLayout) {\r\n      throw new Error('Component is not initialized yet');\r\n    }\r\n    return this.goldenLayout;\r\n  }\r\n\r\n  public addEvent(kind: string, callback: Function, context?: any) {\r\n    this._eventEmitter.on(kind, callback, context);\r\n  }\r\n\r\n  public getSerializableState(): any {\r\n    if (this.goldenLayout) {\r\n      const configObj = this.goldenLayout.toConfig();\r\n      const wrapperMax = (this.goldenLayout as any).__wrapperMaximisedItemId;\r\n      if (wrapperMax) {\r\n        configObj.maximisedItemId = wrapperMax;\r\n        const filterContent = (ci) => {\r\n          if (ci.type === 'stack' && ci.isDummy) {\r\n            return false;\r\n          }\r\n          if (ci.type !== 'component') {\r\n            ci.content = ci.content.filter(filterContent);\r\n          }\r\n          return true;\r\n        }\r\n        configObj.content = configObj.content.filter(filterContent);\r\n      }\r\n      return configObj;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public getComponents(): { [id: string]: GoldenLayout.ContentItem } {\r\n    return (this.goldenLayout as any)._getAllComponents();\r\n  }\r\n\r\n  public closeComponent(component: string) {\r\n    const c = GetComponentFromLayoutManager(this.goldenLayout, component);\r\n    if (!c) {\r\n      return;\r\n    }\r\n    c.remove();\r\n  }\r\n\r\n  public focusComponent(component: string) {\r\n    const c = GetComponentFromLayoutManager(this.goldenLayout, component);\r\n    if (!c) {\r\n      return;\r\n    }\r\n    c.parent.setActiveContentItem(c);\r\n  }\r\n\r\n  public createNewComponent(config: GoldenLayout.ComponentConfig, componentToDock?: string): Promise<ComponentRef<any>> {\r\n    if (!this.goldenLayout) {\r\n      throw new Error(\"golden layout is not initialized\");\r\n    }\r\n    let myConfig: GoldenLayout.ItemConfig = config;\r\n    const root = this.goldenLayout.root;\r\n    let element: GoldenLayout.ContentItem = null;\r\n    if (componentToDock) {\r\n      const c = GetComponentFromLayoutManager(this.goldenLayout, componentToDock);\r\n      if (c.parent.isStack) {\r\n        element = c.parent;\r\n      } else {\r\n        const stack = this.goldenLayout.createContentItem({\r\n          type: 'stack',\r\n          width: c.parent.config.width,\r\n          height: c.parent.config.height,\r\n          content: [],\r\n        }) as any;\r\n        (c.parent.replaceChild as any)(c, stack, false);\r\n        stack.addChild(c);\r\n        element = stack;\r\n      }\r\n    } else {\r\n      if (!root.contentItems || root.contentItems.length === 0) {\r\n        element = root;\r\n        // Ensure there is a stack when closing ALL items and creating a new item.\r\n        myConfig = {\r\n          type: 'stack',\r\n          content: [{\r\n            ...myConfig,\r\n            type: 'component',\r\n          }],\r\n        };\r\n      } else {\r\n        element = this.findStack(root.contentItems);\r\n      }\r\n    }\r\n    if (element === null) {\r\n      throw new Error(\"this should never happen!\");\r\n    }\r\n\r\n    const content = this.goldenLayout.createContentItem(myConfig) as any;\r\n    element.addChild(content);\r\n    if (content.isComponent) {\r\n      // Usually\r\n      return content.instance;\r\n    } else if (content.isStack && content.contentItems.length === 1) {\r\n      return content.contentItems[0].instance; // The case when this is the first component.\r\n    } else {\r\n      return content;\r\n    }\r\n  }\r\n\r\n  private findStack(contentItems: GoldenLayout.ContentItem[]): GoldenLayout.ContentItem {\r\n    if (!contentItems) {\r\n      return null;\r\n    }\r\n    for (const x of contentItems) {\r\n      if (x.isStack) {\r\n        if ((x.config as any).isDummy) {\r\n          continue;\r\n        }\r\n        return x;\r\n      }\r\n      const s = this.findStack(x.contentItems);\r\n      if (s !== null) {\r\n        return s;\r\n      }\r\n    }\r\n  }\r\n\r\n  private destroyGoldenLayout(): void {\r\n    if (!this.goldenLayout) {\r\n      return;\r\n    }\r\n    this.goldenLayout.off('stateChanged', this.pushStateChange);\r\n    this.goldenLayout.off('itemDropped', this.resumeStateChange);\r\n    this.goldenLayout.off('itemDragged', this.pauseStateChange);\r\n    this.goldenLayout.off('tabActivated', this.pushTabActivated);\r\n    this.goldenLayout.off('initialised');\r\n    this.goldenLayout.off(lm.__lm.utils.EventEmitter.ALL_EVENT, this._eventEmitter.emit, this._eventEmitter);\r\n    this.goldenLayout.destroy();\r\n    this.goldenLayout = null;\r\n  }\r\n\r\n  private initializeGoldenLayout(layout: any): void {\r\n    this.goldenLayout = new GoldenLayout(layout, $(this.el.nativeElement));\r\n    const origPopout = this.goldenLayout.createPopout.bind(this.goldenLayout);\r\n    this.goldenLayout.createPopout = (item: GoldenLayout.ContentItem, dim, parent, index) => {\r\n      /**\r\n       * Traverse the component tree below the item we're trying to pop out.\r\n       * This has basically two cases:\r\n       * a) we have a component to popout (or end up at a component somewhen)\r\n       *    for components, contentItems is either undefined or empty, so ignore it\r\n       *    during the children push.\r\n       *    however, for components, we need to check for glOnPopout and call it.\r\n       * b) everything else, where contentItems is a non-empty array.\r\n       *    For these parts, we need to consider all children recursively.\r\n       *\r\n       * Here, an iterative algorithm was chosen.\r\n       */\r\n      const rec = [item];\r\n      while(rec.length) {\r\n        const itemToProcess = rec.shift();\r\n        if (itemToProcess.contentItems && itemToProcess.contentItems.length > 0) {\r\n          rec.push(...itemToProcess.contentItems);\r\n        }\r\n        if (itemToProcess.isComponent) {\r\n          const component = (itemToProcess as any).container.__ngComponent;\r\n          if (component && implementsGlOnPopout(component)) {\r\n            component.glOnPopout();\r\n          }\r\n        }\r\n      }\r\n      return origPopout(item, dim, parent, index);\r\n    }\r\n    /**\r\n     * buildComponentMap creates an object of all opened components below the given item.\r\n     * object keys are component IDs, object values the component with the ID.\r\n     */\r\n    const buildComponentMap = (item: GoldenLayout.ContentItem) => {\r\n      let ret = {};\r\n      for (const ci of item.contentItems) {\r\n        if (ci.isComponent) {\r\n          if (ci.config && (ci.config as any).componentState && (ci.config as any).componentState.originalId) {\r\n            // Skip the dummy components\r\n            continue;\r\n          }\r\n          ret[ci.id] = ci;\r\n        } else {\r\n          ret = { ...ret, ...buildComponentMap(ci) };\r\n        }\r\n      }\r\n      return ret;\r\n    };\r\n    (this.goldenLayout as any)._getAllComponents = () => buildComponentMap(this.goldenLayout.root);\r\n    (this.goldenLayout as any).generateAndMaximiseDummyStack = (parent, item) => {\r\n      /**\r\n       * This function creates a dummy stack, which is being used if 'maximiseAllItems' is true.\r\n       * The dummy stack contains a dummy component for each component opened in the real layout.\r\n       * It will furthermore track component closes/spawns and create/close the dummy components accordingly.\r\n       * parent is the parent of the item we want to maximise\r\n       * item is the item which was active when we wanted to maximise it.\r\n       * required to set the active item index.\r\n       */\r\n      const openedComponents = buildComponentMap(this.goldenLayout.root);\r\n      const componentIdList = Object.keys(openedComponents);\r\n      if (componentIdList.length === 0) {\r\n        return; // How did we get here?!\r\n      }\r\n\r\n      // We only have a single child, so we restore the original behavior\r\n      const rootContentItem = this.goldenLayout.root.contentItems[0];\r\n      if (rootContentItem.isStack) {\r\n        rootContentItem.toggleMaximise();\r\n        return;\r\n      }\r\n\r\n      /**\r\n       * At this point, there are at least two children, so use the dummy component.\r\n       */\r\n      const config = {\r\n        type: 'stack',\r\n        content: componentIdList.map(k => ({\r\n          type: 'component',\r\n          componentName: 'gl-wrapper',\r\n          title: openedComponents[k].config.title,\r\n          reorderEnabled: false,\r\n          componentState: {\r\n            originalId: k, // pass in the ID of the original component as parameter.\r\n          },\r\n        })),\r\n        isClosable: false,\r\n        isDummy: true,\r\n        state: 'dummy',\r\n        activeItemIndex: componentIdList.findIndex(j => j === (item || parent._activeContentItem.id)),\r\n      }\r\n      // add this item as first child ever, causing golden-layout to create a stack object\r\n      rootContentItem.addChild(config, 0);\r\n\r\n      // Fetch the stack\r\n      const myStack = rootContentItem.contentItems[0] as GoldenLayout.ContentItem;\r\n      // Setup an __wrapperMaximisedItemId in order to setActiveContentItem on the underlying stack later.\r\n      (this.goldenLayout as any).__wrapperMaximisedItemId = parent._activeContentItem.id;\r\n      (myStack as any).activeContentItem$.subscribe((ci) => {\r\n        // Setup the __wrapperMaximisedItemId lateron.\r\n        (this.goldenLayout as any).__wrapperMaximisedItemId = ci.config.componentState.originalId;\r\n      });\r\n\r\n      const teardown$ = new Subject();\r\n      myStack.on('minimised', () => {\r\n        // Dummy stack was minimised, so enforce all dummy components to be disposed\r\n        // and dispose the dummy stack as well.\r\n        (this.goldenLayout as any).__wrapperMaximisedItemId = null;\r\n        teardown$.next();\r\n        teardown$.complete();\r\n        myStack.remove()\r\n      });\r\n      // Maximise the dummy stack.\r\n      myStack.toggleMaximise();\r\n\r\n      // Whenever a tab is being created or closed, perform a diff algorithm\r\n      // on the active tabs list and create or delete the dummy tabs.\r\n      this.tabsList.pipe(\r\n        takeUntil(teardown$),\r\n        distinctUntilChanged((a, b) => {\r\n          const keysA = Object.keys(a);\r\n          const keysB = new Set(Object.keys(b));\r\n          return keysA.length === keysB.size && keysA.every(key => keysB.has(key));\r\n        }),\r\n      ).subscribe(targetState => {\r\n        const workingCopy = { ...targetState };\r\n        const tabs = new Set(Object.keys(workingCopy));\r\n        // currently opened tabs\r\n        const openedTabs = new Set(myStack.contentItems.map(ci => {\r\n          return (ci.config as any).componentState.originalId;\r\n        }));\r\n        for (const key of tabs) {\r\n          if (openedTabs.has(key)) {\r\n            // item is both currently opened in dummy and background, nothing to do\r\n            openedTabs.delete(key);\r\n          } else {\r\n            // item is not opened in dummy, create a component\r\n            myStack.addChild({\r\n              type: 'component',\r\n              componentName: 'gl-wrapper',\r\n              title: targetState[key].config.title,\r\n              reorderEnabled: false,\r\n              componentState: {\r\n                originalId: key,\r\n              },\r\n            } as any)\r\n          }\r\n        }\r\n        // The remaining tabs are opened in the dummy but not in the background, so close the dummy.\r\n        for (const tab of openedTabs) {\r\n          const tabObj = myStack.contentItems.find(j => (j.config as any).componentState.originalId === tab);\r\n          tabObj.remove();\r\n        }\r\n      });\r\n    };\r\n\r\n    this.goldenLayout.on('popIn', () => {\r\n      this.poppedIn = true;\r\n      this.openedComponents.forEach(c => {\r\n        if (implementsGlOnPopin(c)) {\r\n          c.glOnPopin();\r\n        }\r\n      });\r\n    });\r\n\r\n    // Overwrite the 'getComponent' method to dynamically resolve JS components.\r\n    // We need to do this, because the component map is not flexible enough for us since we can dynamically chainload plugins.\r\n    this.goldenLayout.getComponent = (type) => {\r\n      if (isDevMode()) {\r\n        console.log(`Resolving component ${type}`);\r\n      }\r\n      return this.buildConstructor(type);\r\n    };\r\n    this.goldenLayout.on('stackCreated', (stack) => {\r\n      const customHeaderElement = document.createElement('li');\r\n      customHeaderElement.classList.add('custom-header');\r\n      customHeaderElement.style.display = 'none';\r\n      const ctr = stack.header.controlsContainer[0] as HTMLUListElement;\r\n      let element: ComponentRef<any> = null;\r\n\r\n      ctr.prepend(customHeaderElement);\r\n\r\n      const disposeControl = () => {\r\n        customHeaderElement.style.display = 'none';\r\n        if (element) {\r\n          customHeaderElement.childNodes.forEach(e => customHeaderElement.removeChild(e));\r\n          element.destroy();\r\n          element = null;\r\n          stack.header._updateTabSizes();\r\n        }\r\n      };\r\n      const bootstrapComponent = (ct: Type<any>, tokens: StaticProvider[], injector: Injector) => {\r\n        if (element) {\r\n          disposeControl();\r\n        }\r\n        customHeaderElement.style.display = '';\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ct);\r\n        const headerInjector = Injector.create(tokens, injector);\r\n        element = this.viewContainer.createComponent(factory, undefined, headerInjector);\r\n        customHeaderElement.prepend(element.location.nativeElement);\r\n        stack.header._updateTabSizes();\r\n      };\r\n\r\n      // Wait until the content item is loaded and done\r\n      stack.activeContentItem$.pipe(\r\n        switchMap((contentItem: GoldenLayout.ContentItem) => {\r\n          if (!contentItem || !contentItem.isComponent) {\r\n            return of(null);\r\n          }\r\n          return (contentItem as any).instance || of(null);\r\n        }), switchMap((cr: ComponentRef<any> | null) => {\r\n          if (!cr) {\r\n            return Promise.all([null, null, null]);\r\n          }\r\n          const inst = cr.instance.headerComponent;\r\n          const tokens = cr.instance.additionalTokens;\r\n          return Promise.all([\r\n            Promise.resolve(inst),\r\n            Promise.resolve(tokens),\r\n            Promise.resolve(cr)\r\n          ]);\r\n        })\r\n      ).subscribe(([header, tokens, componentRef]) => {\r\n        // This is the currently visible content item, after it's loaded.\r\n        // Therefore, we can check whether (and what) to render as header component here.\r\n        if (!header || !componentRef) {\r\n          disposeControl();\r\n        } else {\r\n          bootstrapComponent(\r\n            header,\r\n            tokens || [],\r\n            componentRef.injector\r\n          );\r\n        }\r\n      }, disposeControl, disposeControl);\r\n    });\r\n    // Initialize the layout.\r\n    this.goldenLayout.on('initialised', () => {\r\n      window.requestAnimationFrame(() => {\r\n        if (layout.maximisedItemId) {\r\n          const c = GetComponentFromLayoutManager(this.goldenLayout, layout.maximisedItemId);\r\n          if (c) {\r\n            (this.goldenLayout as any).generateAndMaximiseDummyStack(c.parent, layout.maximisedItemId);\r\n          }\r\n        }\r\n      });\r\n    });\r\n    this.goldenLayout.init();\r\n    this.goldenLayout.on('stateChanged', this.pushStateChange);\r\n    this.goldenLayout.on('itemDragged', this.pauseStateChange);\r\n    this.goldenLayout.on('itemDropped', this.resumeStateChange);\r\n    this.goldenLayout.on('tabActivated', this.pushTabActivated);\r\n    this.goldenLayout.on(lm.__lm.utils.EventEmitter.ALL_EVENT, this._eventEmitter.emit, this._eventEmitter);\r\n    this._eventEmitter.emit('initialised');\r\n  }\r\n\r\n  /**\r\n   * Build a 'virtual' constructor which is used to pass the components to goldenLayout\r\n   * @param componentType\r\n   */\r\n  private buildConstructor(componentName: string): ComponentInitCallback {\r\n    // Can't use an ES6 lambda here, since it is not a constructor\r\n    const self = this;\r\n    return function (container: GoldenLayout.Container, componentState: any) {\r\n      const glComponent = container.parent;\r\n      if (glComponent.config.id) {\r\n        glComponent.id = glComponent.config.id as string;\r\n      } else {\r\n        glComponent.id = uuid();\r\n        glComponent.config.id = glComponent.id;\r\n      }\r\n\r\n      const d = new Deferred<any>();\r\n      self.ngZone.run(() => {\r\n        // Wait until the component registry can provide a type for the component\r\n        // TBD: Maybe add a timeout here?\r\n        const componentPromise = self.componentRegistry.waitForComponent(componentName);\r\n        componentPromise.then((componentType) => {\r\n          // We got our component type\r\n          if (isDevMode()) {\r\n            console.log(`Component ${componentName} returned from componentRegistry`);\r\n          }\r\n          // Create an instance of the angular component.\r\n          const factory = self.componentFactoryResolver.resolveComponentFactory(componentType);\r\n          let failedComponent: string = null;\r\n          if (componentType === self.fallbackComponent) {\r\n            // Failed to find the component constructor **AND** we have a fallback component defined,\r\n            // so lookup the failed component's name and inject it into the fallback component.\r\n            failedComponent = (container as any)._config.componentName;\r\n          }\r\n          const injector = self._createComponentInjector(container, componentState, failedComponent);\r\n          const componentRef = self.viewContainer.createComponent(factory, undefined, injector);\r\n\r\n          // Bind the new component to container's client DOM element.\r\n          container.getElement().append($(componentRef.location.nativeElement));\r\n          self._bindEventHooks(container, componentRef.instance);\r\n          (container as any).__ngComponent = componentRef.instance;\r\n          self.openedComponents.push(componentRef.instance);\r\n          let destroyed = false;\r\n          const destroyFn = () => {\r\n            if (!destroyed) {\r\n              destroyed = true;\r\n              self.openedComponents = self.openedComponents.filter(i => i !== componentRef.instance);\r\n              $(componentRef.location.nativeElement).remove();\r\n              componentRef.destroy();\r\n            }\r\n          };\r\n\r\n          // Listen to containerDestroy and window beforeunload, preventing a double-destroy\r\n          container.on('destroy', destroyFn);\r\n          self.onUnloaded.promise.then(destroyFn);\r\n          d.resolve(componentRef);\r\n        });\r\n      });\r\n      return d.promise;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates an injector capable of injecting the GoldenLayout object,\r\n   * component container, and initial component state.\r\n   */\r\n  private _createComponentInjector(\r\n    container: GoldenLayout.Container,\r\n    componentState: any,\r\n    failed: string | null,\r\n  ): Injector {\r\n    const providers = [\r\n      {\r\n        provide: GoldenLayoutContainer,\r\n        useValue: container,\r\n      },\r\n      {\r\n        provide: GoldenLayoutComponentState,\r\n        useValue: componentState,\r\n      },\r\n      {\r\n        provide: GoldenLayoutEventHub,\r\n        useValue: this.goldenLayout.eventHub,\r\n      },\r\n      {\r\n        provide: GoldenLayoutComponentHost,\r\n        useValue: this,\r\n      }\r\n    ];\r\n    if (!!failed) {\r\n      providers.push({\r\n        provide: FailedComponent,\r\n        useValue: failed,\r\n      });\r\n    }\r\n    return Injector.create(providers, this.injector);\r\n  }\r\n\r\n  /**\r\n   * Registers an event handler for each implemented hook.\r\n   * @param container Golden Layout component container.\r\n   * @param component Angular component instance.\r\n   */\r\n  private _bindEventHooks(container: GoldenLayout.Container, component: any): void {\r\n    if (implementsGlOnResize(component)) {\r\n      container.on('resize', () => {\r\n        component.glOnResize();\r\n      });\r\n    }\r\n\r\n    if (implementsGlOnShow(component)) {\r\n      container.on('show', () => {\r\n        component.glOnShow();\r\n      });\r\n    }\r\n\r\n    if (implementsGlOnHide(component)) {\r\n      container.on('hide', () => {\r\n        component.glOnHide();\r\n      });\r\n    }\r\n\r\n    if (implementsGlOnTab(component)) {\r\n      container.on('tab', (tab) => {\r\n        component.glOnTab(tab);\r\n      });\r\n    }\r\n\r\n    if (implementsGlOnClose(component)) {\r\n      const containerClose = container.close.bind(container);\r\n      container.close = () => {\r\n        if (!(container as any)._config.isClosable) {\r\n          return false;\r\n        }\r\n        component.glOnClose().then(() => {\r\n          containerClose();\r\n        }, () => { /* Prevent close, don't care about rejections */ });\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS, Type, Provider } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GoldenLayoutComponent } from './golden-layout.component';\r\nimport { RootWindowService } from './root-window.service';\r\nimport * as config from './config';\r\nimport { ComponentRegistryService } from './component-registry.service';\r\nimport { FallbackComponent } from './fallback';\r\nimport { PluginRegistryService, MockPluginRegistryService } from './plugin-registry.service';\r\nimport { WindowSynchronizerService, MockWindowSynchronizerService } from './window-sync.service';\r\nimport { PluginURLProvider } from './plugin-url.service';\r\nimport { WrapperComponent } from './wrapper.component';\r\n\r\n@NgModule({\r\n  declarations: [GoldenLayoutComponent, WrapperComponent],\r\n  exports: [GoldenLayoutComponent],\r\n  imports: [CommonModule]\r\n})\r\nexport class GoldenLayoutModule {\r\n  public static forRoot(types: config.ComponentType[], fallback?: Type<any>, pluginDeps?: config.PluginDependencyType[]): ModuleWithProviders<GoldenLayoutModule> {\r\n    return {\r\n      ngModule: GoldenLayoutModule,\r\n      providers: [\r\n        ComponentRegistryService,\r\n        RootWindowService,\r\n        PluginRegistryService,\r\n        PluginURLProvider,\r\n        WindowSynchronizerService,\r\n        { provide: config.GoldenLayoutComponents, useValue: types, },\r\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: [types, fallback, WrapperComponent], multi: true },\r\n        { provide: config.GoldenLayoutPluginDependency, useValue: pluginDeps },\r\n        { provide: FallbackComponent, useValue: fallback },\r\n      ],\r\n    };\r\n  }\r\n\r\n  public static forChild(types: config.ComponentType[], fallback?: Type<any>): Provider[] {\r\n    return [\r\n      ComponentRegistryService,\r\n      { provide: PluginRegistryService, useClass: MockPluginRegistryService },\r\n      { provide: WindowSynchronizerService, useClass: MockWindowSynchronizerService },\r\n      { provide: PluginURLProvider, useValue: null },\r\n      { provide: config.GoldenLayoutComponents, useValue: types, },\r\n      { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: [types, fallback, WrapperComponent], multi: true },\r\n      { provide: FallbackComponent, useValue: fallback },\r\n    ];\r\n  }\r\n}\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MockWindowSynchronizerService as ɵa,WindowSynchronizerService as ɵb} from './lib/window-sync.service';\nexport {WrapperComponent as ɵc} from './lib/wrapper.component';"],"names":["config.GoldenLayoutComponents","config.GoldenLayoutPluginDependency"],"mappings":"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"}